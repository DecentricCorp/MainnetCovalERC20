{
  "contractName": "StandaloneERC721",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "minters",
          "type": "address[]"
        },
        {
          "name": "pausers",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506136c6806100206000396000f3fe608060405234801561001057600080fd5b50600436106101f7576000357c0100000000000000000000000000000000000000000000000000000000900480636ef8d66d1161012157806398650275116100bf578063c4d66de81161008e578063c4d66de814610bbf578063c87b56dd14610c03578063d94cc0e014610caa578063e985e9c514610f24576101f7565b80639865027514610a04578063a22cb46514610a0e578063aa271e1a14610a5e578063b88d4fde14610aba576101f7565b806382dc1ec4116100fb57806382dc1ec4146108ef5780638456cb591461093357806395d89b411461093d578063983b2d56146109c0576101f7565b80636ef8d66d1461088357806370a082311461088d5780638129fc1c146108e5576101f7565b80633f4ba83a116101995780634f6ccce7116101685780634f6ccce7146106b457806350bb4e7f146106f65780635c975abb146107f35780636352211e14610815576101f7565b80633f4ba83a1461048e57806342842e0e1461049857806346fbf68e146105065780634cd88b7614610562576101f7565b8063095ea7b3116101d5578063095ea7b31461035257806318160ddd146103a057806323b872dd146103be5780632f745c591461042c576101f7565b806301ffc9a7146101fc57806306fdde0314610261578063081812fc146102e4575b600080fd5b6102476004803603602081101561021257600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610fa0565b604051808215151515815260200191505060405180910390f35b610269611008565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102a957808201518184015260208101905061028e565b50505050905090810190601f1680156102d65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610310600480360360208110156102fa57600080fd5b81019080803590602001909291905050506110aa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61039e6004803603604081101561036857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110fb565b005b6103a8611126565b6040518082815260200191505060405180910390f35b61042a600480360360608110156103d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611133565b005b6104786004803603604081101561044257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611160565b6040518082815260200191505060405180910390f35b6104966111d7565b005b610504600480360360608110156104ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611288565b005b6105486004803603602081101561051c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112a9565b604051808215151515815260200191505060405180910390f35b6106b26004803603604081101561057857600080fd5b810190808035906020019064010000000081111561059557600080fd5b8201836020820111156105a757600080fd5b803590602001918460018302840111640100000000831117156105c957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561062c57600080fd5b82018360208201111561063e57600080fd5b8035906020019184600183028401116401000000008311171561066057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506112c7565b005b6106e0600480360360208110156106ca57600080fd5b8101908080359060200190929190505050611428565b6040518082815260200191505060405180910390f35b6107d96004803603606081101561070c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561075357600080fd5b82018360208201111561076557600080fd5b8035906020019184600183028401116401000000008311171561078757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611460565b604051808215151515815260200191505060405180910390f35b6107fb611495565b604051808215151515815260200191505060405180910390f35b6108416004803603602081101561082b57600080fd5b81019080803590602001909291905050506114ad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61088b61152b565b005b6108cf600480360360208110156108a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611536565b6040518082815260200191505060405180910390f35b6108ed6115c1565b005b6109316004803603602081101561090557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116f2565b005b61093b611712565b005b6109456117c4565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561098557808201518184015260208101905061096a565b50505050905090810190601f1680156109b25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a02600480360360208110156109d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611866565b005b610a0c611886565b005b610a5c60048036036040811015610a2457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611891565b005b610aa060048036036020811015610a7457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118bc565b604051808215151515815260200191505060405180910390f35b610bbd60048036036080811015610ad057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610b3757600080fd5b820183602082011115610b4957600080fd5b80359060200191846001830284011164010000000083111715610b6b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506118da565b005b610c0160048036036020811015610bd557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611902565b005b610c2f60048036036020811015610c1957600080fd5b8101908080359060200190929190505050611a11565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c6f578082015181840152602081019050610c54565b50505050905090810190601f168015610c9c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610f2260048036036080811015610cc057600080fd5b8101908080359060200190640100000000811115610cdd57600080fd5b820183602082011115610cef57600080fd5b80359060200191846001830284011164010000000083111715610d1157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610d7457600080fd5b820183602082011115610d8657600080fd5b80359060200191846001830284011164010000000083111715610da857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610e0b57600080fd5b820183602082011115610e1d57600080fd5b80359060200191846020830284011164010000000083111715610e3f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610e9f57600080fd5b820183602082011115610eb157600080fd5b80359060200191846020830284011164010000000083111715610ed357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050611ada565b005b610f8660048036036040811015610f3a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c84565b604051808215151515815260200191505060405180910390f35b600060336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060d28054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110a05780601f10611075576101008083540402835291602001916110a0565b820191906000526020600020905b81548152906001019060200180831161108357829003601f168201915b5050505050905090565b60006110b582611d18565b15156110c057600080fd5b6067600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61019f60009054906101000a900460ff1615151561111857600080fd5b6111228282611d8a565b5050565b6000609e80549050905090565b61019f60009054906101000a900460ff1615151561115057600080fd5b61115b838383611ecf565b505050565b600061116b83611536565b8210151561117857600080fd5b609c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156111c457fe5b9060005260206000200154905092915050565b6111e0336112a9565b15156111eb57600080fd5b61019f60009054906101000a900460ff16151561120757600080fd5b600061019f60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6112a483838360206040519081016040528060008152506118da565b505050565b60006112c08261016c611ef490919063ffffffff16565b9050919050565b600060019054906101000a900460ff16806112e657506112e5611f88565b5b806112fd57506000809054906101000a900460ff16155b1515611354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061366d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506113a4611f99565b15156113af57600080fd5b8260d290805190602001906113c592919061359b565b508160d390805190602001906113dc92919061359b565b50611409635b5e139f7c010000000000000000000000000000000000000000000000000000000002611fcc565b80600060016101000a81548160ff021916908315150217905550505050565b6000611432611126565b8210151561143f57600080fd5b609e8281548110151561144e57fe5b90600052602060002001549050919050565b600061146b336118bc565b151561147657600080fd5b611480848461208a565b61148a83836120ab565b600190509392505050565b600061019f60009054906101000a900460ff16905090565b6000806066600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561152257600080fd5b80915050919050565b611534336120eb565b565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561157357600080fd5b6115ba606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612146565b9050919050565b600060019054906101000a900460ff16806115e057506115df611f88565b5b806115f757506000809054906101000a900460ff16155b151561164e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061366d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555061169e611f99565b15156116a957600080fd5b6116d563780e9d637c010000000000000000000000000000000000000000000000000000000002611fcc565b80600060016101000a81548160ff02191690831515021790555050565b6116fb336112a9565b151561170657600080fd5b61170f81612154565b50565b61171b336112a9565b151561172657600080fd5b61019f60009054906101000a900460ff1615151561174357600080fd5b600161019f60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b606060d38054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561185c5780601f106118315761010080835404028352916020019161185c565b820191906000526020600020905b81548152906001019060200180831161183f57829003601f168201915b5050505050905090565b61186f336118bc565b151561187a57600080fd5b611883816121af565b50565b61188f3361220a565b565b61019f60009054906101000a900460ff161515156118ae57600080fd5b6118b88282612265565b5050565b60006118d382610107611ef490919063ffffffff16565b9050919050565b6118e5848484611133565b6118f1848484846123a1565b15156118fc57600080fd5b50505050565b600060019054906101000a900460ff16806119215750611920611f88565b5b8061193857506000809054906101000a900460ff16155b151561198f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061366d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506119df611f99565b15156119ea57600080fd5b6119f3826125c4565b80600060016101000a81548160ff0219169083151502179055505050565b6060611a1c82611d18565b1515611a2757600080fd5b60d460008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ace5780601f10611aa357610100808354040283529160200191611ace565b820191906000526020600020905b815481529060010190602001808311611ab157829003601f168201915b50505050509050919050565b600060019054906101000a900460ff1680611af95750611af8611f88565b5b80611b1057506000809054906101000a900460ff16155b1515611b67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061366d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550611bb76126dc565b611bbf6115c1565b611bc985856112c7565b611bd230612802565b611bdb3061220a565b611be430611902565b611bed306120eb565b60008090505b8351811015611c2757611c1c8482815181101515611c0d57fe5b906020019060200201516121af565b806001019050611bf3565b5060008090505b8251811015611c6257611c578382815181101515611c4857fe5b90602001906020020151612154565b806001019050611c2e565b5080600060016101000a81548160ff0219169083151502179055505050505050565b6000606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806066600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000611d95826114ad565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611dd257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611e125750611e118133611c84565b5b1515611e1d57600080fd5b826067600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b611ed93382612924565b1515611ee457600080fd5b611eef8383836129b9565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611f3157600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080303b90506000811491505090565b6000611fc76380ac58cd7c010000000000000000000000000000000000000000000000000000000002610fa0565b905090565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415151561201d57600080fd5b600160336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b61209482826129dd565b61209e8282612b27565b6120a781612bee565b5050565b6120b482611d18565b15156120bf57600080fd5b8060d4600084815260200190815260200160002090805190602001906120e692919061359b565b505050565b6121008161016c612c3a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b600081600001549050919050565b6121698161016c612ce990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b6121c481610107612ce990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61221f81610107612c3a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156122a057600080fd5b80606960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60006123c28473ffffffffffffffffffffffffffffffffffffffff16612d99565b15156123d157600190506125bc565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156124c85780820151818401526020810190506124ad565b50505050905090810190601f1680156124f55780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561251757600080fd5b505af115801561252b573d6000803e3d6000fd5b505050506040513d602081101561254157600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600060019054906101000a900460ff16806125e357506125e2611f88565b5b806125fa57506000809054906101000a900460ff16155b1515612651576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061366d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506126a282612dac565b600061019f60006101000a81548160ff02191690831515021790555080600060016101000a81548160ff0219169083151502179055505050565b600060019054906101000a900460ff16806126fb57506126fa611f88565b5b8061271257506000809054906101000a900460ff16155b1515612769576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061366d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506127b9612eb8565b6127e56380ac58cd7c010000000000000000000000000000000000000000000000000000000002611fcc565b80600060016101000a81548160ff02191690831515021790555050565b600060019054906101000a900460ff16806128215750612820611f88565b5b8061283857506000809054906101000a900460ff16155b151561288f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061366d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506128df611f99565b15156128ea57600080fd5b6128f2612fd6565b15156128fd57600080fd5b61290682613009565b80600060016101000a81548160ff0219169083151502179055505050565b600080612930836114ad565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061299f57508373ffffffffffffffffffffffffffffffffffffffff16612987846110aa565b73ffffffffffffffffffffffffffffffffffffffff16145b806129b057506129af8185611c84565b5b91505092915050565b6129c4838383613115565b6129ce83826132dc565b6129d88282612b27565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612a1957600080fd5b612a2281611d18565b151515612a2e57600080fd5b816066600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612ac7606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613480565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b609c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050609d600083815260200190815260200160002081905550609c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b609e80549050609f600083815260200190815260200160002081905550609e81908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612c7657600080fd5b612c808282611ef4565b1515612c8b57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612d2557600080fd5b612d2f8282611ef4565b151515612d3b57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080823b905060008111915050919050565b600060019054906101000a900460ff1680612dcb5750612dca611f88565b5b80612de257506000809054906101000a900460ff16155b1515612e39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061366d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550612e8a826112a9565b1515612e9a57612e9982612154565b5b80600060016101000a81548160ff0219169083151502179055505050565b600060019054906101000a900460ff1680612ed75750612ed6611f88565b5b80612eee57506000809054906101000a900460ff16155b1515612f45576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061366d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550612fb96301ffc9a77c010000000000000000000000000000000000000000000000000000000002611fcc565b80600060016101000a81548160ff02191690831515021790555050565b6000613004635b5e139f7c010000000000000000000000000000000000000000000000000000000002610fa0565b905090565b600060019054906101000a900460ff16806130285750613027611f88565b5b8061303f57506000809054906101000a900460ff16155b1515613096576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061366d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506130e7826118bc565b15156130f7576130f6826121af565b5b80600060016101000a81548160ff0219169083151502179055505050565b8273ffffffffffffffffffffffffffffffffffffffff16613135826114ad565b73ffffffffffffffffffffffffffffffffffffffff1614151561315757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561319357600080fd5b61319c81613496565b6131e3606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613556565b61322a606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613480565b816066600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006133346001609c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061357990919063ffffffff16565b90506000609d60008481526020019081526020016000205490508181141515613427576000609c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811015156133a557fe5b9060005260206000200154905080609c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811015156133ff57fe5b906000526020600020018190555081609d600083815260200190815260200160002081905550505b609c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003613479919061361b565b5050505050565b6001816000016000828254019250508190555050565b600073ffffffffffffffffffffffffffffffffffffffff166067600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156135535760006067600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b61356e6001826000015461357990919063ffffffff16565b816000018190555050565b600082821115151561358a57600080fd5b600082840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106135dc57805160ff191683800117855561360a565b8280016001018555821561360a579182015b828111156136095782518255916020019190600101906135ee565b5b5090506136179190613647565b5090565b815481835581811115613642578183600052602060002091820191016136419190613647565b5b505050565b61366991905b8082111561366557600081600090555060010161364d565b5090565b9056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a165627a7a72305820c262668f7dcdf26094ee95ae19c9f8a42e57fff42cb19a5c1eac5993d815afac0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101f7576000357c0100000000000000000000000000000000000000000000000000000000900480636ef8d66d1161012157806398650275116100bf578063c4d66de81161008e578063c4d66de814610bbf578063c87b56dd14610c03578063d94cc0e014610caa578063e985e9c514610f24576101f7565b80639865027514610a04578063a22cb46514610a0e578063aa271e1a14610a5e578063b88d4fde14610aba576101f7565b806382dc1ec4116100fb57806382dc1ec4146108ef5780638456cb591461093357806395d89b411461093d578063983b2d56146109c0576101f7565b80636ef8d66d1461088357806370a082311461088d5780638129fc1c146108e5576101f7565b80633f4ba83a116101995780634f6ccce7116101685780634f6ccce7146106b457806350bb4e7f146106f65780635c975abb146107f35780636352211e14610815576101f7565b80633f4ba83a1461048e57806342842e0e1461049857806346fbf68e146105065780634cd88b7614610562576101f7565b8063095ea7b3116101d5578063095ea7b31461035257806318160ddd146103a057806323b872dd146103be5780632f745c591461042c576101f7565b806301ffc9a7146101fc57806306fdde0314610261578063081812fc146102e4575b600080fd5b6102476004803603602081101561021257600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610fa0565b604051808215151515815260200191505060405180910390f35b610269611008565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102a957808201518184015260208101905061028e565b50505050905090810190601f1680156102d65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610310600480360360208110156102fa57600080fd5b81019080803590602001909291905050506110aa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61039e6004803603604081101561036857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110fb565b005b6103a8611126565b6040518082815260200191505060405180910390f35b61042a600480360360608110156103d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611133565b005b6104786004803603604081101561044257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611160565b6040518082815260200191505060405180910390f35b6104966111d7565b005b610504600480360360608110156104ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611288565b005b6105486004803603602081101561051c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112a9565b604051808215151515815260200191505060405180910390f35b6106b26004803603604081101561057857600080fd5b810190808035906020019064010000000081111561059557600080fd5b8201836020820111156105a757600080fd5b803590602001918460018302840111640100000000831117156105c957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561062c57600080fd5b82018360208201111561063e57600080fd5b8035906020019184600183028401116401000000008311171561066057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506112c7565b005b6106e0600480360360208110156106ca57600080fd5b8101908080359060200190929190505050611428565b6040518082815260200191505060405180910390f35b6107d96004803603606081101561070c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561075357600080fd5b82018360208201111561076557600080fd5b8035906020019184600183028401116401000000008311171561078757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611460565b604051808215151515815260200191505060405180910390f35b6107fb611495565b604051808215151515815260200191505060405180910390f35b6108416004803603602081101561082b57600080fd5b81019080803590602001909291905050506114ad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61088b61152b565b005b6108cf600480360360208110156108a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611536565b6040518082815260200191505060405180910390f35b6108ed6115c1565b005b6109316004803603602081101561090557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116f2565b005b61093b611712565b005b6109456117c4565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561098557808201518184015260208101905061096a565b50505050905090810190601f1680156109b25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a02600480360360208110156109d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611866565b005b610a0c611886565b005b610a5c60048036036040811015610a2457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611891565b005b610aa060048036036020811015610a7457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118bc565b604051808215151515815260200191505060405180910390f35b610bbd60048036036080811015610ad057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610b3757600080fd5b820183602082011115610b4957600080fd5b80359060200191846001830284011164010000000083111715610b6b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506118da565b005b610c0160048036036020811015610bd557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611902565b005b610c2f60048036036020811015610c1957600080fd5b8101908080359060200190929190505050611a11565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c6f578082015181840152602081019050610c54565b50505050905090810190601f168015610c9c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610f2260048036036080811015610cc057600080fd5b8101908080359060200190640100000000811115610cdd57600080fd5b820183602082011115610cef57600080fd5b80359060200191846001830284011164010000000083111715610d1157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610d7457600080fd5b820183602082011115610d8657600080fd5b80359060200191846001830284011164010000000083111715610da857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610e0b57600080fd5b820183602082011115610e1d57600080fd5b80359060200191846020830284011164010000000083111715610e3f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610e9f57600080fd5b820183602082011115610eb157600080fd5b80359060200191846020830284011164010000000083111715610ed357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050611ada565b005b610f8660048036036040811015610f3a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c84565b604051808215151515815260200191505060405180910390f35b600060336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060d28054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110a05780601f10611075576101008083540402835291602001916110a0565b820191906000526020600020905b81548152906001019060200180831161108357829003601f168201915b5050505050905090565b60006110b582611d18565b15156110c057600080fd5b6067600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61019f60009054906101000a900460ff1615151561111857600080fd5b6111228282611d8a565b5050565b6000609e80549050905090565b61019f60009054906101000a900460ff1615151561115057600080fd5b61115b838383611ecf565b505050565b600061116b83611536565b8210151561117857600080fd5b609c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156111c457fe5b9060005260206000200154905092915050565b6111e0336112a9565b15156111eb57600080fd5b61019f60009054906101000a900460ff16151561120757600080fd5b600061019f60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6112a483838360206040519081016040528060008152506118da565b505050565b60006112c08261016c611ef490919063ffffffff16565b9050919050565b600060019054906101000a900460ff16806112e657506112e5611f88565b5b806112fd57506000809054906101000a900460ff16155b1515611354576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061366d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506113a4611f99565b15156113af57600080fd5b8260d290805190602001906113c592919061359b565b508160d390805190602001906113dc92919061359b565b50611409635b5e139f7c010000000000000000000000000000000000000000000000000000000002611fcc565b80600060016101000a81548160ff021916908315150217905550505050565b6000611432611126565b8210151561143f57600080fd5b609e8281548110151561144e57fe5b90600052602060002001549050919050565b600061146b336118bc565b151561147657600080fd5b611480848461208a565b61148a83836120ab565b600190509392505050565b600061019f60009054906101000a900460ff16905090565b6000806066600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561152257600080fd5b80915050919050565b611534336120eb565b565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561157357600080fd5b6115ba606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612146565b9050919050565b600060019054906101000a900460ff16806115e057506115df611f88565b5b806115f757506000809054906101000a900460ff16155b151561164e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061366d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555061169e611f99565b15156116a957600080fd5b6116d563780e9d637c010000000000000000000000000000000000000000000000000000000002611fcc565b80600060016101000a81548160ff02191690831515021790555050565b6116fb336112a9565b151561170657600080fd5b61170f81612154565b50565b61171b336112a9565b151561172657600080fd5b61019f60009054906101000a900460ff1615151561174357600080fd5b600161019f60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b606060d38054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561185c5780601f106118315761010080835404028352916020019161185c565b820191906000526020600020905b81548152906001019060200180831161183f57829003601f168201915b5050505050905090565b61186f336118bc565b151561187a57600080fd5b611883816121af565b50565b61188f3361220a565b565b61019f60009054906101000a900460ff161515156118ae57600080fd5b6118b88282612265565b5050565b60006118d382610107611ef490919063ffffffff16565b9050919050565b6118e5848484611133565b6118f1848484846123a1565b15156118fc57600080fd5b50505050565b600060019054906101000a900460ff16806119215750611920611f88565b5b8061193857506000809054906101000a900460ff16155b151561198f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061366d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506119df611f99565b15156119ea57600080fd5b6119f3826125c4565b80600060016101000a81548160ff0219169083151502179055505050565b6060611a1c82611d18565b1515611a2757600080fd5b60d460008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ace5780601f10611aa357610100808354040283529160200191611ace565b820191906000526020600020905b815481529060010190602001808311611ab157829003601f168201915b50505050509050919050565b600060019054906101000a900460ff1680611af95750611af8611f88565b5b80611b1057506000809054906101000a900460ff16155b1515611b67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061366d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550611bb76126dc565b611bbf6115c1565b611bc985856112c7565b611bd230612802565b611bdb3061220a565b611be430611902565b611bed306120eb565b60008090505b8351811015611c2757611c1c8482815181101515611c0d57fe5b906020019060200201516121af565b806001019050611bf3565b5060008090505b8251811015611c6257611c578382815181101515611c4857fe5b90602001906020020151612154565b806001019050611c2e565b5080600060016101000a81548160ff0219169083151502179055505050505050565b6000606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806066600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000611d95826114ad565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611dd257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611e125750611e118133611c84565b5b1515611e1d57600080fd5b826067600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b611ed93382612924565b1515611ee457600080fd5b611eef8383836129b9565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611f3157600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080303b90506000811491505090565b6000611fc76380ac58cd7c010000000000000000000000000000000000000000000000000000000002610fa0565b905090565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415151561201d57600080fd5b600160336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b61209482826129dd565b61209e8282612b27565b6120a781612bee565b5050565b6120b482611d18565b15156120bf57600080fd5b8060d4600084815260200190815260200160002090805190602001906120e692919061359b565b505050565b6121008161016c612c3a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b600081600001549050919050565b6121698161016c612ce990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b6121c481610107612ce990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61221f81610107612c3a90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156122a057600080fd5b80606960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60006123c28473ffffffffffffffffffffffffffffffffffffffff16612d99565b15156123d157600190506125bc565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156124c85780820151818401526020810190506124ad565b50505050905090810190601f1680156124f55780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561251757600080fd5b505af115801561252b573d6000803e3d6000fd5b505050506040513d602081101561254157600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600060019054906101000a900460ff16806125e357506125e2611f88565b5b806125fa57506000809054906101000a900460ff16155b1515612651576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061366d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506126a282612dac565b600061019f60006101000a81548160ff02191690831515021790555080600060016101000a81548160ff0219169083151502179055505050565b600060019054906101000a900460ff16806126fb57506126fa611f88565b5b8061271257506000809054906101000a900460ff16155b1515612769576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061366d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506127b9612eb8565b6127e56380ac58cd7c010000000000000000000000000000000000000000000000000000000002611fcc565b80600060016101000a81548160ff02191690831515021790555050565b600060019054906101000a900460ff16806128215750612820611f88565b5b8061283857506000809054906101000a900460ff16155b151561288f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061366d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506128df611f99565b15156128ea57600080fd5b6128f2612fd6565b15156128fd57600080fd5b61290682613009565b80600060016101000a81548160ff0219169083151502179055505050565b600080612930836114ad565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061299f57508373ffffffffffffffffffffffffffffffffffffffff16612987846110aa565b73ffffffffffffffffffffffffffffffffffffffff16145b806129b057506129af8185611c84565b5b91505092915050565b6129c4838383613115565b6129ce83826132dc565b6129d88282612b27565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515612a1957600080fd5b612a2281611d18565b151515612a2e57600080fd5b816066600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612ac7606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613480565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b609c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050609d600083815260200190815260200160002081905550609c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b609e80549050609f600083815260200190815260200160002081905550609e81908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612c7657600080fd5b612c808282611ef4565b1515612c8b57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612d2557600080fd5b612d2f8282611ef4565b151515612d3b57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080823b905060008111915050919050565b600060019054906101000a900460ff1680612dcb5750612dca611f88565b5b80612de257506000809054906101000a900460ff16155b1515612e39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061366d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550612e8a826112a9565b1515612e9a57612e9982612154565b5b80600060016101000a81548160ff0219169083151502179055505050565b600060019054906101000a900460ff1680612ed75750612ed6611f88565b5b80612eee57506000809054906101000a900460ff16155b1515612f45576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061366d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550612fb96301ffc9a77c010000000000000000000000000000000000000000000000000000000002611fcc565b80600060016101000a81548160ff02191690831515021790555050565b6000613004635b5e139f7c010000000000000000000000000000000000000000000000000000000002610fa0565b905090565b600060019054906101000a900460ff16806130285750613027611f88565b5b8061303f57506000809054906101000a900460ff16155b1515613096576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061366d602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506130e7826118bc565b15156130f7576130f6826121af565b5b80600060016101000a81548160ff0219169083151502179055505050565b8273ffffffffffffffffffffffffffffffffffffffff16613135826114ad565b73ffffffffffffffffffffffffffffffffffffffff1614151561315757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561319357600080fd5b61319c81613496565b6131e3606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613556565b61322a606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613480565b816066600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006133346001609c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061357990919063ffffffff16565b90506000609d60008481526020019081526020016000205490508181141515613427576000609c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811015156133a557fe5b9060005260206000200154905080609c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811015156133ff57fe5b906000526020600020018190555081609d600083815260200190815260200160002081905550505b609c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003613479919061361b565b5050505050565b6001816000016000828254019250508190555050565b600073ffffffffffffffffffffffffffffffffffffffff166067600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156135535760006067600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b61356e6001826000015461357990919063ffffffff16565b816000018190555050565b600082821115151561358a57600080fd5b600082840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106135dc57805160ff191683800117855561360a565b8280016001018555821561360a579182015b828111156136095782518255916020019190600101906135ee565b5b5090506136179190613647565b5090565b815481835581811115613642578183600052602060002091820191016136419190613647565b5b505050565b61366991905b8082111561366557600081600090555060010161364d565b5090565b9056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a165627a7a72305820c262668f7dcdf26094ee95ae19c9f8a42e57fff42cb19a5c1eac5993d815afac0029",
  "sourceMap": "312:984:66:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;312:984:66;;;;;;;",
  "deployedSourceMap": "312:984:66:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;312:984:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;855:131:29;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;855:131:29;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1289:83:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1289:83:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4012:151:52;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4012:151:52;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;453:110:60;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;453:110:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2259:94:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;704:140:60;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;704:140:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1925:182:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1925:182:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1308:115:32;;;:::i;:::-;;6381:132:52;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6381:132:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;533:107:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;533:107:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;726:321:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;726:321:57;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;726:321:57;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;726:321:57;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;726:321:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;726:321:57;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;726:321:57;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;726:321:57;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;726:321:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;726:321:57;;;;;;;;;;;;;;;:::i;:::-;;2690:148:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2690:148:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;825:209:58;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;825:209:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;825:209:58;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;825:209:58;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;825:209:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;825:209:58;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;592:76:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2837:177:52;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2837:177:52;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;742:75:3;;;:::i;:::-;;2459:160:52;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2459:160:52;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1170:242:54;;;:::i;:::-;;646:90:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;646:90:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;1105:113:32;;;:::i;:::-;;1480:87:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1480:87:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;646:90:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;646:90:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;742:75;;;:::i;:::-;;569:129:60;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;569:129:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;533:107:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;533:107:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7218:211:52;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7218:211:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7218:211:52;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7218:211:52;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7218:211:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7218:211:52;;;;;;;;;;;;;;;:::i;:::-;;301:146:60;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;301:146:60;;;;;;;;;;;;;;;;;;;:::i;:::-;;1766:151:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1766:151:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1766:151:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;447:847:66;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;447:847:66;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;447:847:66;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;447:847:66;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;447:847:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;447:847:66;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;447:847:66;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;447:847:66;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;447:847:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;447:847:66;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;447:847:66;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;447:847:66;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;447:847:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;447:847:66;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;447:847:66;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;447:847:66;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;447:847:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;447:847:66;;;;;;;;;;;;;;;:::i;:::-;;4989:145:52;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4989:145:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;855:131:29;923:4;946:20;:33;967:11;946:33;;;;;;;;;;;;;;;;;;;;;;;;;;;939:40;;855:131;;;:::o;1289:83:57:-;1328:13;1360:5;1353:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1289:83;:::o;4012:151:52:-;4071:7;4098:16;4106:7;4098;:16::i;:::-;4090:25;;;;;;;;4132:15;:24;4148:7;4132:24;;;;;;;;;;;;;;;;;;;;;4125:31;;4012:151;;;:::o;453:110:60:-;821:7:32;;;;;;;;;;;820:8;812:17;;;;;;;;530:26:60;544:2;548:7;530:13;:26::i;:::-;453:110;;:::o;2259:94:54:-;2303:7;2329:10;:17;;;;2322:24;;2259:94;:::o;704:140:60:-;821:7:32;;;;;;;;;;;820:8;812:17;;;;;;;;800:37:60;819:4;825:2;829:7;800:18;:37::i;:::-;704:140;;;:::o;1925:182:54:-;2005:7;2040:16;2050:5;2040:9;:16::i;:::-;2032:5;:24;2024:33;;;;;;;;2074:12;:19;2087:5;2074:19;;;;;;;;;;;;;;;2094:5;2074:26;;;;;;;;;;;;;;;;;;2067:33;;1925:182;;;;:::o;1308:115:32:-;488:20:3;497:10;488:8;:20::i;:::-;480:29;;;;;;;;992:7:32;;;;;;;;;;;984:16;;;;;;;;1376:5;1366:7;;:15;;;;;;;;;;;;;;;;;;1396:20;1405:10;1396:20;;;;;;;;;;;;;;;;;;;;;;1308:115::o;6381:132:52:-;6467:39;6484:4;6490:2;6494:7;6467:39;;;;;;;;;;;;;:16;:39::i;:::-;6381:132;;;:::o;533:107:3:-;589:4;612:21;625:7;612:8;:12;;:21;;;;:::i;:::-;605:28;;533:107;;;:::o;726:321:57:-;1024:12:70;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;825:28:57;:26;:28::i;:::-;817:37;;;;;;;;873:4;865:5;:12;;;;;;;;;;;;:::i;:::-;;897:6;887:7;:16;;;;;;;;;;;;:::i;:::-;;991:49;489:10;1010:29;;991:18;:49::i;:::-;1243:15:70;1228:12;;:30;;;;;;;;;;;;;;;;;;726:321:57;;;:::o;2690:148:54:-;2748:7;2783:13;:11;:13::i;:::-;2775:5;:21;2767:30;;;;;;;;2814:10;2825:5;2814:17;;;;;;;;;;;;;;;;;;2807:24;;2690:148;;;:::o;825:209:58:-;931:4;488:20:2;497:10;488:8;:20::i;:::-;480:29;;;;;;;;947:18:58;953:2;957:7;947:5;:18::i;:::-;975:31;988:7;997:8;975:12;:31::i;:::-;1023:4;1016:11;;825:209;;;;;:::o;592:76:32:-;631:4;654:7;;;;;;;;;;;647:14;;592:76;:::o;2837:177:52:-;2892:7;2911:13;2927:11;:20;2939:7;2927:20;;;;;;;;;;;;;;;;;;;;;2911:36;;2982:1;2965:19;;:5;:19;;;;2957:28;;;;;;;;3002:5;2995:12;;;2837:177;;;:::o;742:75:3:-;785:25;799:10;785:13;:25::i;:::-;742:75::o;2459:160:52:-;2514:7;2558:1;2541:19;;:5;:19;;;;2533:28;;;;;;;;2578:34;:17;:24;2596:5;2578:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2571:41;;2459:160;;;:::o;1170:242:54:-;1024:12:70;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;1229:28:54;:26;:28::i;:::-;1221:37;;;;;;;;1354:51;894:10;1373:31;;1354:18;:51::i;:::-;1243:15:70;1228:12;;:30;;;;;;;;;;;;;;;;;;1170:242:54;:::o;646:90:3:-;488:20;497:10;488:8;:20::i;:::-;480:29;;;;;;;;710:19;721:7;710:10;:19::i;:::-;646:90;:::o;1105:113:32:-;488:20:3;497:10;488:8;:20::i;:::-;480:29;;;;;;;;821:7:32;;;;;;;;;;;820:8;812:17;;;;;;;;1174:4;1164:7;;:14;;;;;;;;;;;;;;;;;;1193:18;1200:10;1193:18;;;;;;;;;;;;;;;;;;;;;;1105:113::o;1480:87:57:-;1521:13;1553:7;1546:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1480:87;:::o;646:90:2:-;488:20;497:10;488:8;:20::i;:::-;480:29;;;;;;;;710:19;721:7;710:10;:19::i;:::-;646:90;:::o;742:75::-;785:25;799:10;785:13;:25::i;:::-;742:75::o;569:129:60:-;821:7:32;;;;;;;;;;;820:8;812:17;;;;;;;;654:37:60;678:2;682:8;654:23;:37::i;:::-;569:129;;:::o;533:107:2:-;589:4;612:21;625:7;612:8;:12;;:21;;;;:::i;:::-;605:28;;533:107;;;:::o;7218:211:52:-;7324:31;7337:4;7343:2;7347:7;7324:12;:31::i;:::-;7373:48;7396:4;7402:2;7406:7;7415:5;7373:22;:48::i;:::-;7365:57;;;;;;;;7218:211;;;;:::o;301:146:60:-;1024:12:70;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;374:28:60;:26;:28::i;:::-;366:37;;;;;;;;413:27;433:6;413:19;:27::i;:::-;1243:15:70;1228:12;;:30;;;;;;;;;;;;;;;;;;301:146:60;;:::o;1766:151:57:-;1824:13;1857:16;1865:7;1857;:16::i;:::-;1849:25;;;;;;;;1891:10;:19;1902:7;1891:19;;;;;;;;;;;1884:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1766:151;;;:::o;447:847:66:-;1024:12:70;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;590:19:66;:17;:19::i;:::-;619:29;:27;:29::i;:::-;658:39;684:4;690:6;658:25;:39::i;:::-;777:48;819:4;777:33;:48::i;:::-;835:28;857:4;835:13;:28::i;:::-;874:40;908:4;874:25;:40::i;:::-;924:28;946:4;924:13;:28::i;:::-;1099:9;1111:1;1099:13;;1094:92;1118:7;:14;1114:1;:18;1094:92;;;1153:22;1164:7;1172:1;1164:10;;;;;;;;;;;;;;;;;;1153;:22::i;:::-;1134:3;;;;;1094:92;;;;1201:9;1213:1;1201:13;;1196:92;1220:7;:14;1216:1;:18;1196:92;;;1255:22;1266:7;1274:1;1266:10;;;;;;;;;;;;;;;;;;1255;:22::i;:::-;1236:3;;;;;1196:92;;;;1243:15:70;1228:12;;:30;;;;;;;;;;;;;;;;;;447:847:66;;;;;:::o;4989:145:52:-;5069:4;5092:18;:25;5111:5;5092:25;;;;;;;;;;;;;;;:35;5118:8;5092:35;;;;;;;;;;;;;;;;;;;;;;;;;5085:42;;4989:145;;;;:::o;7623:152::-;7680:4;7696:13;7712:11;:20;7724:7;7712:20;;;;;;;;;;;;;;;;;;;;;7696:36;;7766:1;7749:19;;:5;:19;;;;7742:26;;;7623:152;;;:::o;3435:292::-;3498:13;3514:16;3522:7;3514;:16::i;:::-;3498:32;;3554:5;3548:11;;:2;:11;;;;3540:20;;;;;;;;3592:5;3578:19;;:10;:19;;;:58;;;;3601:35;3618:5;3625:10;3601:16;:35::i;:::-;3578:58;3570:67;;;;;;;;3675:2;3648:15;:24;3664:7;3648:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3712:7;3708:2;3692:28;;3701:5;3692:28;;;;;;;;;;;;3435:292;;;:::o;5568:180::-;5658:39;5677:10;5689:7;5658:18;:39::i;:::-;5650:48;;;;;;;;5709:32;5723:4;5729:2;5733:7;5709:13;:32::i;:::-;5568:180;;;:::o;786:162:0:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;1349:467:70:-;1396:4;1737:10;1782:7;1770:20;1764:26;;1810:1;1804:2;:7;1797:14;;;1349:467;:::o;2133:123:52:-;2187:4;2210:39;1288:10;2228:20;;2210:17;:39::i;:::-;2203:46;;2133:123;:::o;1065:158:29:-;1155:10;1140:25;;:11;:25;;;;;1132:34;;;;;;;;1212:4;1176:20;:33;1197:11;1176:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1065:158;:::o;3707:196:54:-;3770:24;3782:2;3786:7;3770:11;:24::i;:::-;3805:40;3833:2;3837:7;3805:27;:40::i;:::-;3856;3888:7;3856:31;:40::i;:::-;3707:196;;:::o;2154:144:57:-;2239:16;2247:7;2239;:16::i;:::-;2231:25;;;;;;;;2288:3;2266:10;:19;2277:7;2266:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;2154:144;;:::o;948:127:3:-;1007:24;1023:7;1007:8;:15;;:24;;;;:::i;:::-;1060:7;1046:22;;;;;;;;;;;;948:127;:::o;1062:112:22:-;1127:7;1153;:14;;;1146:21;;1062:112;;;:::o;823:119:3:-;879:21;892:7;879:8;:12;;:21;;;;:::i;:::-;927:7;915:20;;;;;;;;;;;;823:119;:::o;::2:-;879:21;892:7;879:8;:12;;:21;;;;:::i;:::-;927:7;915:20;;;;;;;;;;;;823:119;:::o;948:127::-;1007:24;1023:7;1007:8;:15;;:24;;;;:::i;:::-;1060:7;1046:22;;;;;;;;;;;;948:127;:::o;4455:213:52:-;4540:10;4534:16;;:2;:16;;;;4526:25;;;;;;;;4598:8;4561:18;:30;4580:10;4561:30;;;;;;;;;;;;;;;:34;4592:2;4561:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4648:2;4621:40;;4636:10;4621:40;;;4652:8;4621:40;;;;;;;;;;;;;;;;;;;;;;4455:213;;:::o;10973:347::-;11094:4;11119:15;:2;:13;;;:15::i;:::-;11118:16;11114:58;;;11157:4;11150:11;;;;11114:58;11182:13;11214:2;11198:36;;;11235:10;11247:4;11253:7;11262:5;11198:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11198:70:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11198:70:52;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11198:70:52;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11198:70:52;;;;;;;;;;;;;;;;11182:86;;774:10;11296:16;;11286:26;;;:6;:26;;;;11278:35;;;10973:347;;;;;;;:::o;379:127:32:-;1024:12:70;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;444:29:32;466:6;444:21;:29::i;:::-;494:5;484:7;;:15;;;;;;;;;;;;;;;;;;1243::70;1228:12;;:30;;;;;;;;;;;;;;;;;;379:127:32;;:::o;1922:205:52:-;1024:12:70;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;1973:19:52;:17;:19::i;:::-;2080:40;1288:10;2099:20;;2080:18;:40::i;:::-;1243:15:70;1228:12;;:30;;;;;;;;;;;;;;;;;;1922:205:52;:::o;323:203:58:-;1024:12:70;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;396:28:58;:26;:28::i;:::-;388:37;;;;;;;;443:36;:34;:36::i;:::-;435:45;;;;;;;;490:29;512:6;490:21;:29::i;:::-;1243:15:70;1228:12;;:30;;;;;;;;;;;;;;;;;;323:203:58;;:::o;8135:246:52:-;8220:4;8236:13;8252:16;8260:7;8252;:16::i;:::-;8236:32;;8297:5;8286:16;;:7;:16;;;:51;;;;8330:7;8306:31;;:20;8318:7;8306:11;:20::i;:::-;:31;;;8286:51;:87;;;;8341:32;8358:5;8365:7;8341:16;:32::i;:::-;8286:87;8278:96;;;8135:246;;;;:::o;3213:239:54:-;3298:38;3318:4;3324:2;3328:7;3298:19;:38::i;:::-;3347:47;3380:4;3386:7;3347:32;:47::i;:::-;3405:40;3433:2;3437:7;3405:27;:40::i;:::-;3213:239;;;:::o;8624:259:52:-;8709:1;8695:16;;:2;:16;;;;8687:25;;;;;;;;8731:16;8739:7;8731;:16::i;:::-;8730:17;8722:26;;;;;;;;8782:2;8759:11;:20;8771:7;8759:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8794:33;:17;:21;8812:2;8794:21;;;;;;;;;;;;;;;:31;:33::i;:::-;8868:7;8864:2;8843:33;;8860:1;8843:33;;;;;;;;;;;;8624:259;;:::o;5161:183:54:-;5274:12;:16;5287:2;5274:16;;;;;;;;;;;;;;;:23;;;;5245:17;:26;5263:7;5245:26;;;;;;;;;;;:52;;;;5307:12;:16;5320:2;5307:16;;;;;;;;;;;;;;;5329:7;5307:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5307:30:54;;;;;;;;;;;;;;;;;;;;;;5161:183;;:::o;5539:161::-;5642:10;:17;;;;5615:15;:24;5631:7;5615:24;;;;;;;;;;;:44;;;;5669:10;5685:7;5669:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5669:24:54;;;;;;;;;;;;;;;;;;;;;;5539:161;:::o;514:184:0:-;612:1;593:21;;:7;:21;;;;585:30;;;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;259:181::-;354:1;335:21;;:7;:21;;;;327:30;;;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;463:616:67:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;305:137:3:-;1024:12:70;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;375:16:3;384:6;375:8;:16::i;:::-;374:17;370:66;;;407:18;418:6;407:10;:18::i;:::-;370:66;1243:15:70;1228:12;;:30;;;;;;;;;;;;;;;;;;305:137:3;;:::o;666:98:29:-;1024:12:70;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;717:40:29;297:10;736:20;;717:18;:40::i;:::-;1243:15:70;1228:12;;:30;;;;;;;;;;;;;;;;;;666:98:29;:::o;1053:132:57:-;1107:4;1130:48;489:10;1148:29;;1130:17;:48::i;:::-;1123:55;;1053:132;:::o;305:137:2:-;1024:12:70;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;375:16:2;384:6;375:8;:16::i;:::-;374:17;370:66;;;407:18;418:6;407:10;:18::i;:::-;370:66;1243:15:70;1228:12;;:30;;;;;;;;;;;;;;;;;;305:137:2;;:::o;10083:362:52:-;10196:4;10176:24;;:16;10184:7;10176;:16::i;:::-;:24;;;10168:33;;;;;;;;10233:1;10219:16;;:2;:16;;;;10211:25;;;;;;;;10247:23;10262:7;10247:14;:23::i;:::-;10281:35;:17;:23;10299:4;10281:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10326:33;:17;:21;10344:2;10326:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10393:2;10370:11;:20;10382:7;10370:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10430:7;10426:2;10411:27;;10420:4;10411:27;;;;;;;;;;;;10083:362;;;:::o;6315:1128:54:-;6577:22;6602:32;6632:1;6602:12;:18;6615:4;6602:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6577:57;;6644:18;6665:17;:26;6683:7;6665:26;;;;;;;;;;;;6644:47;;6809:14;6795:10;:28;;6791:323;;;6839:19;6861:12;:18;6874:4;6861:18;;;;;;;;;;;;;;;6880:14;6861:34;;;;;;;;;;;;;;;;;;6839:56;;6943:11;6910:12;:18;6923:4;6910:18;;;;;;;;;;;;;;;6929:10;6910:30;;;;;;;;;;;;;;;;;:44;;;;7059:10;7026:17;:30;7044:11;7026:30;;;;;;;;;;;:43;;;;6791:323;;7200:12;:18;7213:4;7200:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6315:1128;;;;:::o;1180:89:22:-;1261:1;1243:7;:14;;;:19;;;;;;;;;;;1180:89;:::o;11481:171:52:-;11580:1;11544:38;;:15;:24;11560:7;11544:24;;;;;;;;;;;;;;;;;;;;;:38;;;;11540:106;;;11633:1;11598:15;:24;11614:7;11598:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11540:106;11481:171;:::o;1275:108:22:-;1355:21;1374:1;1355:7;:14;;;:18;;:21;;;;:::i;:::-;1338:7;:14;;:38;;;;1275:108;:::o;1211:145:34:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;1211:145;;;;:::o;312:984:66:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"zos-lib/contracts/Initializable.sol\";\nimport \"./ERC721.sol\";\nimport \"./ERC721Enumerable.sol\";\nimport \"./ERC721Metadata.sol\";\nimport \"./ERC721MetadataMintable.sol\";\nimport \"./ERC721Pausable.sol\";\n\n\n/**\n * @title Standard ERC721 token, with minting and pause functionality.\n *\n */\ncontract StandaloneERC721\n    is Initializable, ERC721, ERC721Enumerable, ERC721Metadata, ERC721MetadataMintable, ERC721Pausable\n{\n    function initialize(string memory name, string memory symbol, address[] memory minters, address[] memory pausers) public initializer {\n        ERC721.initialize();\n        ERC721Enumerable.initialize();\n        ERC721Metadata.initialize(name, symbol);\n\n        // Initialize the minter and pauser roles, and renounce them\n        ERC721MetadataMintable.initialize(address(this));\n        _removeMinter(address(this));\n\n        ERC721Pausable.initialize(address(this));\n        _removePauser(address(this));\n\n        // Add the requested minters and pausers (this can be done after renouncing since\n        // these are the internal calls)\n        for (uint256 i = 0; i < minters.length; ++i) {\n            _addMinter(minters[i]);\n        }\n\n        for (uint256 i = 0; i < pausers.length; ++i) {\n            _addPauser(pausers[i]);\n        }\n    }\n}\n",
  "sourcePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/StandaloneERC721.sol",
  "ast": {
    "absolutePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/StandaloneERC721.sol",
    "exportedSymbols": {
      "StandaloneERC721": [
        8240
      ]
    },
    "id": 8241,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8122,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:66"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 8123,
        "nodeType": "ImportDirective",
        "scope": 8241,
        "sourceUnit": 8439,
        "src": "25:45:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 8124,
        "nodeType": "ImportDirective",
        "scope": 8241,
        "sourceUnit": 7120,
        "src": "71:22:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 8125,
        "nodeType": "ImportDirective",
        "scope": 8241,
        "sourceUnit": 7511,
        "src": "94:32:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 8126,
        "nodeType": "ImportDirective",
        "scope": 8241,
        "sourceUnit": 7713,
        "src": "127:30:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "file": "./ERC721MetadataMintable.sol",
        "id": 8127,
        "nodeType": "ImportDirective",
        "scope": 8241,
        "sourceUnit": 7783,
        "src": "158:38:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/ERC721Pausable.sol",
        "file": "./ERC721Pausable.sol",
        "id": 8128,
        "nodeType": "ImportDirective",
        "scope": 8241,
        "sourceUnit": 7928,
        "src": "197:30:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8129,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8438,
              "src": "345:13:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8438",
                "typeString": "contract Initializable"
              }
            },
            "id": 8130,
            "nodeType": "InheritanceSpecifier",
            "src": "345:13:66"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8131,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7119,
              "src": "360:6:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$7119",
                "typeString": "contract ERC721"
              }
            },
            "id": 8132,
            "nodeType": "InheritanceSpecifier",
            "src": "360:6:66"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8133,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7510,
              "src": "368:16:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$7510",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 8134,
            "nodeType": "InheritanceSpecifier",
            "src": "368:16:66"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8135,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7712,
              "src": "386:14:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$7712",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 8136,
            "nodeType": "InheritanceSpecifier",
            "src": "386:14:66"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8137,
              "name": "ERC721MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7782,
              "src": "402:22:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MetadataMintable_$7782",
                "typeString": "contract ERC721MetadataMintable"
              }
            },
            "id": 8138,
            "nodeType": "InheritanceSpecifier",
            "src": "402:22:66"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8139,
              "name": "ERC721Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7927,
              "src": "426:14:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Pausable_$7927",
                "typeString": "contract ERC721Pausable"
              }
            },
            "id": 8140,
            "nodeType": "InheritanceSpecifier",
            "src": "426:14:66"
          }
        ],
        "contractDependencies": [
          331,
          450,
          3860,
          4007,
          4107,
          7119,
          7510,
          7712,
          7782,
          7927,
          8033,
          8063,
          8104,
          8438
        ],
        "contractKind": "contract",
        "documentation": "@title Standard ERC721 token, with minting and pause functionality.\n ",
        "fullyImplemented": true,
        "id": 8240,
        "linearizedBaseContracts": [
          8240,
          7927,
          4107,
          450,
          7782,
          331,
          7712,
          8104,
          7510,
          8063,
          7119,
          8033,
          3860,
          4007,
          8438
        ],
        "name": "StandaloneERC721",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8238,
              "nodeType": "Block",
              "src": "580:714:66",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8155,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7119,
                        "src": "590:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$7119_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 8157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6613,
                      "src": "590:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 8158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "590:19:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8159,
                  "nodeType": "ExpressionStatement",
                  "src": "590:19:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8160,
                        "name": "ERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7510,
                        "src": "619:16:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$7510_$",
                          "typeString": "type(contract ERC721Enumerable)"
                        }
                      },
                      "id": 8162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7199,
                      "src": "619:27:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 8163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "619:29:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8164,
                  "nodeType": "ExpressionStatement",
                  "src": "619:29:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8168,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8142,
                        "src": "684:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8169,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8144,
                        "src": "690:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8165,
                        "name": "ERC721Metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7712,
                        "src": "658:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$7712_$",
                          "typeString": "type(contract ERC721Metadata)"
                        }
                      },
                      "id": 8167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7613,
                      "src": "658:25:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 8170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "658:39:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8171,
                  "nodeType": "ExpressionStatement",
                  "src": "658:39:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8176,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8606,
                            "src": "819:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$8240",
                              "typeString": "contract StandaloneERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$8240",
                              "typeString": "contract StandaloneERC721"
                            }
                          ],
                          "id": 8175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "811:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "811:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8172,
                        "name": "ERC721MetadataMintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7782,
                        "src": "777:22:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721MetadataMintable_$7782_$",
                          "typeString": "type(contract ERC721MetadataMintable)"
                        }
                      },
                      "id": 8174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7751,
                      "src": "777:33:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "777:48:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8179,
                  "nodeType": "ExpressionStatement",
                  "src": "777:48:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8182,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8606,
                            "src": "857:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$8240",
                              "typeString": "contract StandaloneERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$8240",
                              "typeString": "contract StandaloneERC721"
                            }
                          ],
                          "id": 8181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "849:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "849:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8180,
                      "name": "_removeMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 326,
                      "src": "835:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "835:28:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8185,
                  "nodeType": "ExpressionStatement",
                  "src": "835:28:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8190,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8606,
                            "src": "908:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$8240",
                              "typeString": "contract StandaloneERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$8240",
                              "typeString": "contract StandaloneERC721"
                            }
                          ],
                          "id": 8189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "900:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "900:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8186,
                        "name": "ERC721Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7927,
                        "src": "874:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Pausable_$7927_$",
                          "typeString": "type(contract ERC721Pausable)"
                        }
                      },
                      "id": 8188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7868,
                      "src": "874:25:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "874:40:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8193,
                  "nodeType": "ExpressionStatement",
                  "src": "874:40:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8196,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8606,
                            "src": "946:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$8240",
                              "typeString": "contract StandaloneERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$8240",
                              "typeString": "contract StandaloneERC721"
                            }
                          ],
                          "id": 8195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "938:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "938:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8194,
                      "name": "_removePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 445,
                      "src": "924:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "924:28:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8199,
                  "nodeType": "ExpressionStatement",
                  "src": "924:28:66"
                },
                {
                  "body": {
                    "id": 8217,
                    "nodeType": "Block",
                    "src": "1139:47:66",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 8212,
                                "name": "minters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8147,
                                "src": "1164:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 8214,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 8213,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8201,
                                "src": "1172:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1164:10:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8211,
                            "name": "_addMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 310,
                            "src": "1153:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 8215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1153:22:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8216,
                        "nodeType": "ExpressionStatement",
                        "src": "1153:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8204,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8201,
                      "src": "1114:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 8205,
                        "name": "minters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8147,
                        "src": "1118:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 8206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1118:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1114:18:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8218,
                  "initializationExpression": {
                    "assignments": [
                      8201
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8201,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 8218,
                        "src": "1099:9:66",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8200,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1099:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 8203,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 8202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1111:1:66",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1099:13:66"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 8209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1134:3:66",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 8208,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8201,
                        "src": "1136:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8210,
                    "nodeType": "ExpressionStatement",
                    "src": "1134:3:66"
                  },
                  "nodeType": "ForStatement",
                  "src": "1094:92:66"
                },
                {
                  "body": {
                    "id": 8236,
                    "nodeType": "Block",
                    "src": "1241:47:66",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 8231,
                                "name": "pausers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8150,
                                "src": "1266:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 8233,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 8232,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8220,
                                "src": "1274:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1266:10:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8230,
                            "name": "_addPauser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 429,
                            "src": "1255:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 8234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1255:22:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8235,
                        "nodeType": "ExpressionStatement",
                        "src": "1255:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8223,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8220,
                      "src": "1216:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 8224,
                        "name": "pausers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8150,
                        "src": "1220:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 8225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1220:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1216:18:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8237,
                  "initializationExpression": {
                    "assignments": [
                      8220
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8220,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 8237,
                        "src": "1201:9:66",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8219,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1201:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 8222,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 8221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1213:1:66",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1201:13:66"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 8228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1236:3:66",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 8227,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8220,
                        "src": "1238:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8229,
                    "nodeType": "ExpressionStatement",
                    "src": "1236:3:66"
                  },
                  "nodeType": "ForStatement",
                  "src": "1196:92:66"
                }
              ]
            },
            "documentation": null,
            "id": 8239,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8153,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8152,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8419,
                  "src": "568:11:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "568:11:66"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8142,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 8239,
                  "src": "467:18:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8141,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "467:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8144,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 8239,
                  "src": "487:20:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8143,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8147,
                  "name": "minters",
                  "nodeType": "VariableDeclaration",
                  "scope": 8239,
                  "src": "509:24:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8145,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "509:7:66",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 8146,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "509:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8150,
                  "name": "pausers",
                  "nodeType": "VariableDeclaration",
                  "scope": 8239,
                  "src": "535:24:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8148,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "535:7:66",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 8149,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "535:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "466:94:66"
            },
            "returnParameters": {
              "id": 8154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "580:0:66"
            },
            "scope": 8240,
            "src": "447:847:66",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 8241,
        "src": "312:984:66"
      }
    ],
    "src": "0:1297:66"
  },
  "legacyAST": {
    "absolutePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/StandaloneERC721.sol",
    "exportedSymbols": {
      "StandaloneERC721": [
        8240
      ]
    },
    "id": 8241,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8122,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:66"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 8123,
        "nodeType": "ImportDirective",
        "scope": 8241,
        "sourceUnit": 8439,
        "src": "25:45:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 8124,
        "nodeType": "ImportDirective",
        "scope": 8241,
        "sourceUnit": 7120,
        "src": "71:22:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 8125,
        "nodeType": "ImportDirective",
        "scope": 8241,
        "sourceUnit": 7511,
        "src": "94:32:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 8126,
        "nodeType": "ImportDirective",
        "scope": 8241,
        "sourceUnit": 7713,
        "src": "127:30:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "file": "./ERC721MetadataMintable.sol",
        "id": 8127,
        "nodeType": "ImportDirective",
        "scope": 8241,
        "sourceUnit": 7783,
        "src": "158:38:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/ERC721Pausable.sol",
        "file": "./ERC721Pausable.sol",
        "id": 8128,
        "nodeType": "ImportDirective",
        "scope": 8241,
        "sourceUnit": 7928,
        "src": "197:30:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8129,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8438,
              "src": "345:13:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8438",
                "typeString": "contract Initializable"
              }
            },
            "id": 8130,
            "nodeType": "InheritanceSpecifier",
            "src": "345:13:66"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8131,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7119,
              "src": "360:6:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$7119",
                "typeString": "contract ERC721"
              }
            },
            "id": 8132,
            "nodeType": "InheritanceSpecifier",
            "src": "360:6:66"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8133,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7510,
              "src": "368:16:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$7510",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 8134,
            "nodeType": "InheritanceSpecifier",
            "src": "368:16:66"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8135,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7712,
              "src": "386:14:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$7712",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 8136,
            "nodeType": "InheritanceSpecifier",
            "src": "386:14:66"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8137,
              "name": "ERC721MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7782,
              "src": "402:22:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MetadataMintable_$7782",
                "typeString": "contract ERC721MetadataMintable"
              }
            },
            "id": 8138,
            "nodeType": "InheritanceSpecifier",
            "src": "402:22:66"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8139,
              "name": "ERC721Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7927,
              "src": "426:14:66",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Pausable_$7927",
                "typeString": "contract ERC721Pausable"
              }
            },
            "id": 8140,
            "nodeType": "InheritanceSpecifier",
            "src": "426:14:66"
          }
        ],
        "contractDependencies": [
          331,
          450,
          3860,
          4007,
          4107,
          7119,
          7510,
          7712,
          7782,
          7927,
          8033,
          8063,
          8104,
          8438
        ],
        "contractKind": "contract",
        "documentation": "@title Standard ERC721 token, with minting and pause functionality.\n ",
        "fullyImplemented": true,
        "id": 8240,
        "linearizedBaseContracts": [
          8240,
          7927,
          4107,
          450,
          7782,
          331,
          7712,
          8104,
          7510,
          8063,
          7119,
          8033,
          3860,
          4007,
          8438
        ],
        "name": "StandaloneERC721",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8238,
              "nodeType": "Block",
              "src": "580:714:66",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8155,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7119,
                        "src": "590:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$7119_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 8157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6613,
                      "src": "590:17:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 8158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "590:19:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8159,
                  "nodeType": "ExpressionStatement",
                  "src": "590:19:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8160,
                        "name": "ERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7510,
                        "src": "619:16:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$7510_$",
                          "typeString": "type(contract ERC721Enumerable)"
                        }
                      },
                      "id": 8162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7199,
                      "src": "619:27:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 8163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "619:29:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8164,
                  "nodeType": "ExpressionStatement",
                  "src": "619:29:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8168,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8142,
                        "src": "684:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8169,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8144,
                        "src": "690:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8165,
                        "name": "ERC721Metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7712,
                        "src": "658:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$7712_$",
                          "typeString": "type(contract ERC721Metadata)"
                        }
                      },
                      "id": 8167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7613,
                      "src": "658:25:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 8170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "658:39:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8171,
                  "nodeType": "ExpressionStatement",
                  "src": "658:39:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8176,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8606,
                            "src": "819:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$8240",
                              "typeString": "contract StandaloneERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$8240",
                              "typeString": "contract StandaloneERC721"
                            }
                          ],
                          "id": 8175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "811:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "811:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8172,
                        "name": "ERC721MetadataMintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7782,
                        "src": "777:22:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721MetadataMintable_$7782_$",
                          "typeString": "type(contract ERC721MetadataMintable)"
                        }
                      },
                      "id": 8174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7751,
                      "src": "777:33:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "777:48:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8179,
                  "nodeType": "ExpressionStatement",
                  "src": "777:48:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8182,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8606,
                            "src": "857:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$8240",
                              "typeString": "contract StandaloneERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$8240",
                              "typeString": "contract StandaloneERC721"
                            }
                          ],
                          "id": 8181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "849:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "849:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8180,
                      "name": "_removeMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 326,
                      "src": "835:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "835:28:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8185,
                  "nodeType": "ExpressionStatement",
                  "src": "835:28:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8190,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8606,
                            "src": "908:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$8240",
                              "typeString": "contract StandaloneERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$8240",
                              "typeString": "contract StandaloneERC721"
                            }
                          ],
                          "id": 8189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "900:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "900:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8186,
                        "name": "ERC721Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7927,
                        "src": "874:14:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Pausable_$7927_$",
                          "typeString": "type(contract ERC721Pausable)"
                        }
                      },
                      "id": 8188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7868,
                      "src": "874:25:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "874:40:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8193,
                  "nodeType": "ExpressionStatement",
                  "src": "874:40:66"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8196,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8606,
                            "src": "946:4:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$8240",
                              "typeString": "contract StandaloneERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$8240",
                              "typeString": "contract StandaloneERC721"
                            }
                          ],
                          "id": 8195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "938:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 8197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "938:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8194,
                      "name": "_removePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 445,
                      "src": "924:13:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "924:28:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8199,
                  "nodeType": "ExpressionStatement",
                  "src": "924:28:66"
                },
                {
                  "body": {
                    "id": 8217,
                    "nodeType": "Block",
                    "src": "1139:47:66",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 8212,
                                "name": "minters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8147,
                                "src": "1164:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 8214,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 8213,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8201,
                                "src": "1172:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1164:10:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8211,
                            "name": "_addMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 310,
                            "src": "1153:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 8215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1153:22:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8216,
                        "nodeType": "ExpressionStatement",
                        "src": "1153:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8204,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8201,
                      "src": "1114:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 8205,
                        "name": "minters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8147,
                        "src": "1118:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 8206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1118:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1114:18:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8218,
                  "initializationExpression": {
                    "assignments": [
                      8201
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8201,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 8218,
                        "src": "1099:9:66",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8200,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1099:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 8203,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 8202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1111:1:66",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1099:13:66"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 8209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1134:3:66",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 8208,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8201,
                        "src": "1136:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8210,
                    "nodeType": "ExpressionStatement",
                    "src": "1134:3:66"
                  },
                  "nodeType": "ForStatement",
                  "src": "1094:92:66"
                },
                {
                  "body": {
                    "id": 8236,
                    "nodeType": "Block",
                    "src": "1241:47:66",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 8231,
                                "name": "pausers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8150,
                                "src": "1266:7:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 8233,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 8232,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8220,
                                "src": "1274:1:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1266:10:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8230,
                            "name": "_addPauser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 429,
                            "src": "1255:10:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 8234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1255:22:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8235,
                        "nodeType": "ExpressionStatement",
                        "src": "1255:22:66"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8223,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8220,
                      "src": "1216:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 8224,
                        "name": "pausers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8150,
                        "src": "1220:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 8225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1220:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1216:18:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8237,
                  "initializationExpression": {
                    "assignments": [
                      8220
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8220,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 8237,
                        "src": "1201:9:66",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8219,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1201:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 8222,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 8221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1213:1:66",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1201:13:66"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 8228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1236:3:66",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 8227,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8220,
                        "src": "1238:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8229,
                    "nodeType": "ExpressionStatement",
                    "src": "1236:3:66"
                  },
                  "nodeType": "ForStatement",
                  "src": "1196:92:66"
                }
              ]
            },
            "documentation": null,
            "id": 8239,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8153,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8152,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8419,
                  "src": "568:11:66",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "568:11:66"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8142,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 8239,
                  "src": "467:18:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8141,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "467:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8144,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 8239,
                  "src": "487:20:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8143,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8147,
                  "name": "minters",
                  "nodeType": "VariableDeclaration",
                  "scope": 8239,
                  "src": "509:24:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8145,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "509:7:66",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 8146,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "509:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8150,
                  "name": "pausers",
                  "nodeType": "VariableDeclaration",
                  "scope": 8239,
                  "src": "535:24:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8148,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "535:7:66",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 8149,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "535:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "466:94:66"
            },
            "returnParameters": {
              "id": 8154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "580:0:66"
            },
            "scope": 8240,
            "src": "447:847:66",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 8241,
        "src": "312:984:66"
      }
    ],
    "src": "0:1297:66"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-06-10T23:33:49.257Z",
  "devdoc": {
    "methods": {
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "initialize()": {
        "details": "Constructor function"
      },
      "initialize(string,string)": {
        "details": "Constructor function"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mintWithTokenURI(address,uint256,string)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenId": "The token id to mint.",
          "tokenURI": "The token URI of the minted token."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state"
      },
      "paused()": {
        "return": "true if the contract is paused, false otherwise."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state"
      }
    },
    "title": "Standard ERC721 token, with minting and pause functionality. "
  },
  "userdoc": {
    "methods": {}
  }
}