{
  "contractName": "ERC721Full",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "428:117:55:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;428:117:55;;;;;;;",
  "deployedSourceMap": "428:117:55:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;428:117:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;855:131:29;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;855:131:29;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1289:83:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1289:83:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4012:151:52;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4012:151:52;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3435:292;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3435:292:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2259:94:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5568:180:52;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5568:180:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1925:182:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1925:182:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6381:132:52;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6381:132:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;726:321:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;726:321:57;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;726:321:57;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;726:321:57;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;726:321:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;726:321:57;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;726:321:57;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;726:321:57;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;726:321:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;726:321:57;;;;;;;;;;;;;;;:::i;:::-;;2690:148:54;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2690:148:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2837:177:52;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2837:177:52;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2459:160;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2459:160:52;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1170:242:54;;;:::i;:::-;;1480:87:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1480:87:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4455:213:52;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4455:213:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7218:211;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7218:211:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7218:211:52;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7218:211:52;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7218:211:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7218:211:52;;;;;;;;;;;;;;;:::i;:::-;;1766:151:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1766:151:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1766:151:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4989:145:52;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4989:145:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;855:131:29;923:4;946:20;:33;967:11;946:33;;;;;;;;;;;;;;;;;;;;;;;;;;;939:40;;855:131;;;:::o;1289:83:57:-;1328:13;1360:5;1353:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1289:83;:::o;4012:151:52:-;4071:7;4098:16;4106:7;4098;:16::i;:::-;4090:25;;;;;;;;4132:15;:24;4148:7;4132:24;;;;;;;;;;;;;;;;;;;;;4125:31;;4012:151;;;:::o;3435:292::-;3498:13;3514:16;3522:7;3514;:16::i;:::-;3498:32;;3554:5;3548:11;;:2;:11;;;;3540:20;;;;;;;;3592:5;3578:19;;:10;:19;;;:58;;;;3601:35;3618:5;3625:10;3601:16;:35::i;:::-;3578:58;3570:67;;;;;;;;3675:2;3648:15;:24;3664:7;3648:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3712:7;3708:2;3692:28;;3701:5;3692:28;;;;;;;;;;;;3435:292;;;:::o;2259:94:54:-;2303:7;2329:10;:17;;;;2322:24;;2259:94;:::o;5568:180:52:-;5658:39;5677:10;5689:7;5658:18;:39::i;:::-;5650:48;;;;;;;;5709:32;5723:4;5729:2;5733:7;5709:13;:32::i;:::-;5568:180;;;:::o;1925:182:54:-;2005:7;2040:16;2050:5;2040:9;:16::i;:::-;2032:5;:24;2024:33;;;;;;;;2074:12;:19;2087:5;2074:19;;;;;;;;;;;;;;;2094:5;2074:26;;;;;;;;;;;;;;;;;;2067:33;;1925:182;;;;:::o;6381:132:52:-;6467:39;6484:4;6490:2;6494:7;6467:39;;;;;;;;;;;;;:16;:39::i;:::-;6381:132;;;:::o;726:321:57:-;1024:12:70;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;825:28:57;:26;:28::i;:::-;817:37;;;;;;;;873:4;865:5;:12;;;;;;;;;;;;:::i;:::-;;897:6;887:7;:16;;;;;;;;;;;;:::i;:::-;;991:49;489:10;1010:29;;991:18;:49::i;:::-;1243:15:70;1228:12;;:30;;;;;;;;;;;;;;;;;;726:321:57;;;:::o;2690:148:54:-;2748:7;2783:13;:11;:13::i;:::-;2775:5;:21;2767:30;;;;;;;;2814:10;2825:5;2814:17;;;;;;;;;;;;;;;;;;2807:24;;2690:148;;;:::o;2837:177:52:-;2892:7;2911:13;2927:11;:20;2939:7;2927:20;;;;;;;;;;;;;;;;;;;;;2911:36;;2982:1;2965:19;;:5;:19;;;;2957:28;;;;;;;;3002:5;2995:12;;;2837:177;;;:::o;2459:160::-;2514:7;2558:1;2541:19;;:5;:19;;;;2533:28;;;;;;;;2578:34;:17;:24;2596:5;2578:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2571:41;;2459:160;;;:::o;1170:242:54:-;1024:12:70;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;1229:28:54;:26;:28::i;:::-;1221:37;;;;;;;;1354:51;894:10;1373:31;;1354:18;:51::i;:::-;1243:15:70;1228:12;;:30;;;;;;;;;;;;;;;;;;1170:242:54;:::o;1480:87:57:-;1521:13;1553:7;1546:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1480:87;:::o;4455:213:52:-;4540:10;4534:16;;:2;:16;;;;4526:25;;;;;;;;4598:8;4561:18;:30;4580:10;4561:30;;;;;;;;;;;;;;;:34;4592:2;4561:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4648:2;4621:40;;4636:10;4621:40;;;4652:8;4621:40;;;;;;;;;;;;;;;;;;;;;;4455:213;;:::o;7218:211::-;7324:31;7337:4;7343:2;7347:7;7324:12;:31::i;:::-;7373:48;7396:4;7402:2;7406:7;7415:5;7373:22;:48::i;:::-;7365:57;;;;;;;;7218:211;;;;:::o;1766:151:57:-;1824:13;1857:16;1865:7;1857;:16::i;:::-;1849:25;;;;;;;;1891:10;:19;1902:7;1891:19;;;;;;;;;;;1884:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1766:151;;;:::o;4989:145:52:-;5069:4;5092:18;:25;5111:5;5092:25;;;;;;;;;;;;;;;:35;5118:8;5092:35;;;;;;;;;;;;;;;;;;;;;;;;;5085:42;;4989:145;;;;:::o;7623:152::-;7680:4;7696:13;7712:11;:20;7724:7;7712:20;;;;;;;;;;;;;;;;;;;;;7696:36;;7766:1;7749:19;;:5;:19;;;;7742:26;;;7623:152;;;:::o;8135:246::-;8220:4;8236:13;8252:16;8260:7;8252;:16::i;:::-;8236:32;;8297:5;8286:16;;:7;:16;;;:51;;;;8330:7;8306:31;;:20;8318:7;8306:11;:20::i;:::-;:31;;;8286:51;:87;;;;8341:32;8358:5;8365:7;8341:16;:32::i;:::-;8286:87;8278:96;;;8135:246;;;;:::o;3213:239:54:-;3298:38;3318:4;3324:2;3328:7;3298:19;:38::i;:::-;3347:47;3380:4;3386:7;3347:32;:47::i;:::-;3405:40;3433:2;3437:7;3405:27;:40::i;:::-;3213:239;;;:::o;1349:467:70:-;1396:4;1737:10;1782:7;1770:20;1764:26;;1810:1;1804:2;:7;1797:14;;;1349:467;:::o;2133:123:52:-;2187:4;2210:39;1288:10;2228:20;;2210:17;:39::i;:::-;2203:46;;2133:123;:::o;1065:158:29:-;1155:10;1140:25;;:11;:25;;;;;1132:34;;;;;;;;1212:4;1176:20;:33;1197:11;1176:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1065:158;:::o;1062:112:22:-;1127:7;1153;:14;;;1146:21;;1062:112;;;:::o;10973:347:52:-;11094:4;11119:15;:2;:13;;;:15::i;:::-;11118:16;11114:58;;;11157:4;11150:11;;;;11114:58;11182:13;11214:2;11198:36;;;11235:10;11247:4;11253:7;11262:5;11198:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11198:70:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11198:70:52;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11198:70:52;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11198:70:52;;;;;;;;;;;;;;;;11182:86;;774:10;11296:16;;11286:26;;;:6;:26;;;;11278:35;;;10973:347;;;;;;;:::o;10083:362::-;10196:4;10176:24;;:16;10184:7;10176;:16::i;:::-;:24;;;10168:33;;;;;;;;10233:1;10219:16;;:2;:16;;;;10211:25;;;;;;;;10247:23;10262:7;10247:14;:23::i;:::-;10281:35;:17;:23;10299:4;10281:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10326:33;:17;:21;10344:2;10326:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10393:2;10370:11;:20;10382:7;10370:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10430:7;10426:2;10411:27;;10420:4;10411:27;;;;;;;;;;;;10083:362;;;:::o;6315:1128:54:-;6577:22;6602:32;6632:1;6602:12;:18;6615:4;6602:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6577:57;;6644:18;6665:17;:26;6683:7;6665:26;;;;;;;;;;;;6644:47;;6809:14;6795:10;:28;;6791:323;;;6839:19;6861:12;:18;6874:4;6861:18;;;;;;;;;;;;;;;6880:14;6861:34;;;;;;;;;;;;;;;;;;6839:56;;6943:11;6910:12;:18;6923:4;6910:18;;;;;;;;;;;;;;;6929:10;6910:30;;;;;;;;;;;;;;;;;:44;;;;7059:10;7026:17;:30;7044:11;7026:30;;;;;;;;;;;:43;;;;6791:323;;7200:12;:18;7213:4;7200:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6315:1128;;;;:::o;5161:183::-;5274:12;:16;5287:2;5274:16;;;;;;;;;;;;;;;:23;;;;5245:17;:26;5263:7;5245:26;;;;;;;;;;;:52;;;;5307:12;:16;5320:2;5307:16;;;;;;;;;;;;;;;5329:7;5307:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5307:30:54;;;;;;;;;;;;;;;;;;;;;;5161:183;;:::o;463:616:67:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;11481:171:52:-;11580:1;11544:38;;:15;:24;11560:7;11544:24;;;;;;;;;;;;;;;;;;;;;:38;;;;11540:106;;;11633:1;11598:15;:24;11614:7;11598:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11540:106;11481:171;:::o;1275:108:22:-;1355:21;1374:1;1355:7;:14;;;:18;;:21;;;;:::i;:::-;1338:7;:14;;:38;;;;1275:108;:::o;1180:89::-;1261:1;1243:7;:14;;;:19;;;;;;;;;;;1180:89;:::o;1211:145:34:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;1211:145;;;;:::o;428:117:55:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.2;\n\nimport \"zos-lib/contracts/Initializable.sol\";\nimport \"./ERC721.sol\";\nimport \"./ERC721Enumerable.sol\";\nimport \"./ERC721Metadata.sol\";\n\n/**\n * @title Full ERC721 Token\n * This implementation includes all the required and some optional functionality of the ERC721 standard\n * Moreover, it includes approve all functionality using operator terminology\n * @dev see https://eips.ethereum.org/EIPS/eip-721\n */\ncontract ERC721Full is Initializable, ERC721, ERC721Enumerable, ERC721Metadata {\n    uint256[50] private ______gap;\n}\n",
  "sourcePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/ERC721Full.sol",
  "ast": {
    "absolutePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        7529
      ]
    },
    "id": 7530,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7512,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:55"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 7513,
        "nodeType": "ImportDirective",
        "scope": 7530,
        "sourceUnit": 8439,
        "src": "25:45:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 7514,
        "nodeType": "ImportDirective",
        "scope": 7530,
        "sourceUnit": 7120,
        "src": "71:22:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 7515,
        "nodeType": "ImportDirective",
        "scope": 7530,
        "sourceUnit": 7511,
        "src": "94:32:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 7516,
        "nodeType": "ImportDirective",
        "scope": 7530,
        "sourceUnit": 7713,
        "src": "127:30:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7517,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8438,
              "src": "451:13:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8438",
                "typeString": "contract Initializable"
              }
            },
            "id": 7518,
            "nodeType": "InheritanceSpecifier",
            "src": "451:13:55"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7519,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7119,
              "src": "466:6:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$7119",
                "typeString": "contract ERC721"
              }
            },
            "id": 7520,
            "nodeType": "InheritanceSpecifier",
            "src": "466:6:55"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7521,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7510,
              "src": "474:16:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$7510",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 7522,
            "nodeType": "InheritanceSpecifier",
            "src": "474:16:55"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7523,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7712,
              "src": "492:14:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$7712",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 7524,
            "nodeType": "InheritanceSpecifier",
            "src": "492:14:55"
          }
        ],
        "contractDependencies": [
          3860,
          4007,
          7119,
          7510,
          7712,
          8033,
          8063,
          8104,
          8438
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\nThis implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology\n@dev see https://eips.ethereum.org/EIPS/eip-721",
        "fullyImplemented": true,
        "id": 7529,
        "linearizedBaseContracts": [
          7529,
          7712,
          8104,
          7510,
          8063,
          7119,
          8033,
          3860,
          4007,
          8438
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7528,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 7529,
            "src": "513:29:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 7525,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "513:7:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 7527,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 7526,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "521:2:55",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "513:11:55",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 7530,
        "src": "428:117:55"
      }
    ],
    "src": "0:546:55"
  },
  "legacyAST": {
    "absolutePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/ERC721Full.sol",
    "exportedSymbols": {
      "ERC721Full": [
        7529
      ]
    },
    "id": 7530,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7512,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:55"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 7513,
        "nodeType": "ImportDirective",
        "scope": 7530,
        "sourceUnit": 8439,
        "src": "25:45:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 7514,
        "nodeType": "ImportDirective",
        "scope": 7530,
        "sourceUnit": 7120,
        "src": "71:22:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 7515,
        "nodeType": "ImportDirective",
        "scope": 7530,
        "sourceUnit": 7511,
        "src": "94:32:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 7516,
        "nodeType": "ImportDirective",
        "scope": 7530,
        "sourceUnit": 7713,
        "src": "127:30:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7517,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8438,
              "src": "451:13:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8438",
                "typeString": "contract Initializable"
              }
            },
            "id": 7518,
            "nodeType": "InheritanceSpecifier",
            "src": "451:13:55"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7519,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7119,
              "src": "466:6:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$7119",
                "typeString": "contract ERC721"
              }
            },
            "id": 7520,
            "nodeType": "InheritanceSpecifier",
            "src": "466:6:55"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7521,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7510,
              "src": "474:16:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$7510",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 7522,
            "nodeType": "InheritanceSpecifier",
            "src": "474:16:55"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7523,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7712,
              "src": "492:14:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$7712",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 7524,
            "nodeType": "InheritanceSpecifier",
            "src": "492:14:55"
          }
        ],
        "contractDependencies": [
          3860,
          4007,
          7119,
          7510,
          7712,
          8033,
          8063,
          8104,
          8438
        ],
        "contractKind": "contract",
        "documentation": "@title Full ERC721 Token\nThis implementation includes all the required and some optional functionality of the ERC721 standard\nMoreover, it includes approve all functionality using operator terminology\n@dev see https://eips.ethereum.org/EIPS/eip-721",
        "fullyImplemented": true,
        "id": 7529,
        "linearizedBaseContracts": [
          7529,
          7712,
          8104,
          7510,
          8063,
          7119,
          8033,
          3860,
          4007,
          8438
        ],
        "name": "ERC721Full",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7528,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 7529,
            "src": "513:29:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 7525,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "513:7:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 7527,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 7526,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "521:2:55",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "513:11:55",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 7530,
        "src": "428:117:55"
      }
    ],
    "src": "0:546:55"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-06-10T23:33:49.254Z",
  "devdoc": {
    "details": "see https://eips.ethereum.org/EIPS/eip-721",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "initialize()": {
        "details": "Constructor function"
      },
      "initialize(string,string)": {
        "details": "Constructor function"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "Full ERC721 Token This implementation includes all the required and some optional functionality of the ERC721 standard Moreover, it includes approve all functionality using operator terminology"
  },
  "userdoc": {
    "methods": {}
  }
}