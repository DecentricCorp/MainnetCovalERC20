{
  "contractName": "RefundableCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "finalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CrowdsaleFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "prevClosingTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "newClosingTime",
          "type": "uint256"
        }
      ],
      "name": "TimedCrowdsaleExtended",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "name": "closingTime",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "goal",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "refundee",
          "type": "address"
        }
      ],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506129b7806100206000396000f3fe608060405260043610610126576000357c0100000000000000000000000000000000000000000000000000000000900480638129fc1c116100b2578063bffa55d511610081578063bffa55d5146103c4578063e4a3011614610415578063ec8ac4d81461045a578063fc0c546a1461049e578063fe4b84df146104f557610126565b80638129fc1c146102d8578063b3f05b97146102ef578063b4988fd01461031e578063b7a8807c1461039957610126565b806347535d7b116100f957806347535d7b146101e15780634b6753bc146102105780634bb278f31461023b578063521eb273146102525780637d3d6522146102a957610126565b80631515bc2b146101315780632c4e722e14610160578063401938831461018b5780634042b66f146101b6575b61012f33610530565b005b34801561013d57600080fd5b50610146610628565b604051808215151515815260200191505060405180910390f35b34801561016c57600080fd5b50610175610634565b6040518082815260200191505060405180910390f35b34801561019757600080fd5b506101a061063e565b6040518082815260200191505060405180910390f35b3480156101c257600080fd5b506101cb610649565b6040518082815260200191505060405180910390f35b3480156101ed57600080fd5b506101f6610653565b604051808215151515815260200191505060405180910390f35b34801561021c57600080fd5b5061022561066e565b6040518082815260200191505060405180910390f35b34801561024757600080fd5b50610250610678565b005b34801561025e57600080fd5b506102676106f8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102b557600080fd5b506102be610722565b604051808215151515815260200191505060405180910390f35b3480156102e457600080fd5b506102ed610737565b005b3480156102fb57600080fd5b50610304610831565b604051808215151515815260200191505060405180910390f35b34801561032a57600080fd5b506103976004803603606081101561034157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610848565b005b3480156103a557600080fd5b506103ae610a4d565b6040518082815260200191505060405180910390f35b3480156103d057600080fd5b50610413600480360360208110156103e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a57565b005b34801561042157600080fd5b506104586004803603604081101561043857600080fd5b810190808035906020019092919080359060200190929190505050610b57565b005b61049c6004803603602081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610530565b005b3480156104aa57600080fd5b506104b3610c86565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561050157600080fd5b5061052e6004803603602081101561051857600080fd5b8101908080359060200190929190505050610cb0565b005b60016033600082825401925050819055506000603354905060003490506105578382610f9a565b600061056282610fbb565b905061057982606954610fd990919063ffffffff16565b6069819055506105898482610ffa565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36106008483611008565b61060861100c565b61061284836110e5565b50506033548114151561062457600080fd5b5050565b6000609d544211905090565b6000606854905090565b600061010354905090565b6000606954905090565b6000609c5442101580156106695750609d544211155b905090565b6000609d54905090565b60d060009054906101000a900460ff1615151561069457600080fd5b61069c610628565b15156106a757600080fd5b600160d060006101000a81548160ff0219169083151502179055506106ca6110e9565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061010354610730610649565b1015905090565b600060019054906101000a900460ff168061075657506107556112e3565b5b8061076d57506000809054906101000a900460ff16155b15156107c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061295e602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550600160338190555080600060016101000a81548160ff02191690831515021790555050565b600060d060009054906101000a900460ff16905090565b600060019054906101000a900460ff168061086757506108666112e3565b5b8061087e57506000809054906101000a900460ff16155b15156108d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061295e602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555060008411151561092c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561096857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156109a457600080fd5b8360688190555082606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060016101000a81548160ff02191690831515021790555050505050565b6000609c54905090565b610a5f610831565b1515610a6a57600080fd5b610a72610722565b151515610a7e57600080fd5b61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610b3c57600080fd5b505af1158015610b50573d6000803e3d6000fd5b5050505050565b600060019054906101000a900460ff1680610b765750610b756112e3565b5b80610b8d57506000809054906101000a900460ff16155b1515610be4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061295e602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610c346112f4565b1515610c3c57fe5b428310151515610c4b57600080fd5b8282111515610c5957600080fd5b82609c8190555081609d8190555080600060016101000a81548160ff021916908315150217905550505050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900460ff1680610ccf5750610cce6112e3565b5b80610ce657506000809054906101000a900460ff16155b1515610d3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061295e602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610d8d6113b6565b1515610d9557fe5b600082111515610da457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff1661010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610f7457610e046116e6565b604051809103906000f080158015610e20573d6000803e3d6000fd5b5061010460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663485cc955610ea96106f8565b306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015610f5b57600080fd5b505af1158015610f6f573d6000803e3d6000fd5b505050505b816101038190555080600060016101000a81548160ff0219169083151502179055505050565b610fa2610653565b1515610fad57600080fd5b610fb782826113d0565b5050565b6000610fd26068548361142090919063ffffffff16565b9050919050565b6000808284019050838110151515610ff057600080fd5b8091505092915050565b611004828261145e565b5050565b5050565b61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b1580156110ca57600080fd5b505af11580156110de573d6000803e3d6000fd5b5050505050565b5050565b6110f1610722565b156112395761010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561117d57600080fd5b505af1158015611191573d6000803e3d6000fd5b5050505061010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561121c57600080fd5b505af1158015611230573d6000803e3d6000fd5b505050506112d9565b61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156112c057600080fd5b505af11580156112d4573d6000803e3d6000fd5b505050505b6112e16114af565b565b600080303b90506000811491505090565b6000806068541180156113565750600073ffffffffffffffffffffffffffffffffffffffff16606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b80156113b15750600073ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b905090565b600080609c541180156113cb57506000609d54115b905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561140c57600080fd5b6000811415151561141c57600080fd5b5050565b6000808314156114335760009050611458565b6000828402905082848281151561144657fe5b0414151561145357600080fd5b809150505b92915050565b6114ab8282606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166114b19092919063ffffffff16565b5050565b565b611599838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb90507c0100000000000000000000000000000000000000000000000000000000028484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061159e565b505050565b6115bd8273ffffffffffffffffffffffffffffffffffffffff166116d3565b15156115c857600080fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b60208310151561161957805182526020820191506020810190506020830392506115f4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461167b576040519150601f19603f3d011682016040523d82523d6000602084013e611680565b606091505b509150915081151561169157600080fd5b6000815111156116cd578080602001905160208110156116b057600080fd5b810190808051906020019092919050505015156116cc57600080fd5b5b50505050565b600080823b905060008111915050919050565b604051611267806116f78339019056fe608060405234801561001057600080fd5b50611247806100206000396000f3fe6080604052600436106100df576000357c0100000000000000000000000000000000000000000000000000000000900480638c52dc411161009c578063c4d66de811610076578063c4d66de814610335578063c6dbdf6114610386578063e3a9db1a146103dd578063f340fa0114610442576100df565b80638c52dc41146102ce5780639af6549a146102e5578063c19d93fb146102fc576100df565b80632348238c146100e457806338af3eed1461013557806343d726d61461018c578063485cc955146101a357806351cff8d914610214578063685ca19414610265575b600080fd5b3480156100f057600080fd5b506101336004803603602081101561010757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610486565b005b34801561014157600080fd5b5061014a6105e7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019857600080fd5b506101a1610611565b005b3480156101af57600080fd5b50610212600480360360408110156101c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106f3565b005b34801561022057600080fd5b506102636004803603602081101561023757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610891565b005b34801561027157600080fd5b506102b46004803603602081101561028857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108b1565b604051808215151515815260200191505060405180910390f35b3480156102da57600080fd5b506102e36108e3565b005b3480156102f157600080fd5b506102fa6109c5565b005b34801561030857600080fd5b50610311610a7a565b6040518082600281111561032157fe5b60ff16815260200191505060405180910390f35b34801561034157600080fd5b506103846004803603602081101561035857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a91565b005b34801561039257600080fd5b5061039b610b8d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103e957600080fd5b5061042c6004803603602081101561040057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bb7565b6040518082815260200191505060405180910390f35b6104846004803603602081101561045857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c00565b005b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104e257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561051e57600080fd5b80603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d9603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600060cb60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561066d57600080fd5b6000600281111561067a57fe5b60cb60009054906101000a900460ff16600281111561069557fe5b1415156106a157600080fd5b600260cb60006101000a81548160ff021916908360028111156106c057fe5b02179055507f088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f60405160405180910390a1565b600060019054906101000a900460ff16806107125750610711610c40565b5b8061072957506000809054906101000a900460ff16155b1515610780576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806111ee602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506107d182610a91565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561080d57600080fd5b8260cb60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060cb60006101000a81548160ff0219169083600281111561086d57fe5b021790555080600060016101000a81548160ff021916908315150217905550505050565b61089a816108b1565b15156108a557600080fd5b6108ae81610c51565b50565b6000600160028111156108c057fe5b60cb60009054906101000a900460ff1660028111156108db57fe5b149050919050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561093f57600080fd5b6000600281111561094c57fe5b60cb60009054906101000a900460ff16600281111561096757fe5b14151561097357600080fd5b600160cb60006101000a81548160ff0219169083600281111561099257fe5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b6002808111156109d157fe5b60cb60009054906101000a900460ff1660028111156109ec57fe5b1415156109f857600080fd5b60cb60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610a77573d6000803e3d6000fd5b50565b600060cb60009054906101000a900460ff16905090565b600060019054906101000a900460ff1680610ab05750610aaf610c40565b5b80610ac757506000809054906101000a900460ff16155b1515610b1e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806111ee602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610b6f82610dcf565b80600060016101000a81548160ff0219169083151502179055505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006002811115610c0d57fe5b60cb60009054906101000a900460ff166002811115610c2857fe5b141515610c3457600080fd5b610c3d81610ecb565b50565b600080303b90506000811491505090565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cad57600080fd5b6000606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610d7c573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040518082815260200191505060405180910390a25050565b600060019054906101000a900460ff1680610dee5750610ded610c40565b5b80610e0557506000809054906101000a900460ff16155b1515610e5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806111ee602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610ead82611013565b80600060016101000a81548160ff0219169083151502179055505050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f2757600080fd5b6000349050610f7e81606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111cc90919063ffffffff16565b606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040518082815260200191505060405180910390a25050565b600060019054906101000a900460ff16806110325750611031610c40565b5b8061104957506000809054906101000a900460ff16155b15156110a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806111ee602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d9603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a180600060016101000a81548160ff0219169083151502179055505050565b60008082840190508381101515156111e357600080fd5b809150509291505056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a165627a7a723058206e7831cda3df76175e2ae7a136e3f350427deeb58b6b4059a124c85c941f23530029436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a165627a7a72305820325783e87cd93b3f5e5f1ecd1c2477e5d94a105bf960a4432ae78f4c8eeea0cc0029",
  "deployedBytecode": "0x608060405260043610610126576000357c0100000000000000000000000000000000000000000000000000000000900480638129fc1c116100b2578063bffa55d511610081578063bffa55d5146103c4578063e4a3011614610415578063ec8ac4d81461045a578063fc0c546a1461049e578063fe4b84df146104f557610126565b80638129fc1c146102d8578063b3f05b97146102ef578063b4988fd01461031e578063b7a8807c1461039957610126565b806347535d7b116100f957806347535d7b146101e15780634b6753bc146102105780634bb278f31461023b578063521eb273146102525780637d3d6522146102a957610126565b80631515bc2b146101315780632c4e722e14610160578063401938831461018b5780634042b66f146101b6575b61012f33610530565b005b34801561013d57600080fd5b50610146610628565b604051808215151515815260200191505060405180910390f35b34801561016c57600080fd5b50610175610634565b6040518082815260200191505060405180910390f35b34801561019757600080fd5b506101a061063e565b6040518082815260200191505060405180910390f35b3480156101c257600080fd5b506101cb610649565b6040518082815260200191505060405180910390f35b3480156101ed57600080fd5b506101f6610653565b604051808215151515815260200191505060405180910390f35b34801561021c57600080fd5b5061022561066e565b6040518082815260200191505060405180910390f35b34801561024757600080fd5b50610250610678565b005b34801561025e57600080fd5b506102676106f8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102b557600080fd5b506102be610722565b604051808215151515815260200191505060405180910390f35b3480156102e457600080fd5b506102ed610737565b005b3480156102fb57600080fd5b50610304610831565b604051808215151515815260200191505060405180910390f35b34801561032a57600080fd5b506103976004803603606081101561034157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610848565b005b3480156103a557600080fd5b506103ae610a4d565b6040518082815260200191505060405180910390f35b3480156103d057600080fd5b50610413600480360360208110156103e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a57565b005b34801561042157600080fd5b506104586004803603604081101561043857600080fd5b810190808035906020019092919080359060200190929190505050610b57565b005b61049c6004803603602081101561047057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610530565b005b3480156104aa57600080fd5b506104b3610c86565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561050157600080fd5b5061052e6004803603602081101561051857600080fd5b8101908080359060200190929190505050610cb0565b005b60016033600082825401925050819055506000603354905060003490506105578382610f9a565b600061056282610fbb565b905061057982606954610fd990919063ffffffff16565b6069819055506105898482610ffa565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36106008483611008565b61060861100c565b61061284836110e5565b50506033548114151561062457600080fd5b5050565b6000609d544211905090565b6000606854905090565b600061010354905090565b6000606954905090565b6000609c5442101580156106695750609d544211155b905090565b6000609d54905090565b60d060009054906101000a900460ff1615151561069457600080fd5b61069c610628565b15156106a757600080fd5b600160d060006101000a81548160ff0219169083151502179055506106ca6110e9565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061010354610730610649565b1015905090565b600060019054906101000a900460ff168061075657506107556112e3565b5b8061076d57506000809054906101000a900460ff16155b15156107c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061295e602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550600160338190555080600060016101000a81548160ff02191690831515021790555050565b600060d060009054906101000a900460ff16905090565b600060019054906101000a900460ff168061086757506108666112e3565b5b8061087e57506000809054906101000a900460ff16155b15156108d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061295e602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555060008411151561092c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561096857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156109a457600080fd5b8360688190555082606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600060016101000a81548160ff02191690831515021790555050505050565b6000609c54905090565b610a5f610831565b1515610a6a57600080fd5b610a72610722565b151515610a7e57600080fd5b61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610b3c57600080fd5b505af1158015610b50573d6000803e3d6000fd5b5050505050565b600060019054906101000a900460ff1680610b765750610b756112e3565b5b80610b8d57506000809054906101000a900460ff16155b1515610be4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061295e602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610c346112f4565b1515610c3c57fe5b428310151515610c4b57600080fd5b8282111515610c5957600080fd5b82609c8190555081609d8190555080600060016101000a81548160ff021916908315150217905550505050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900460ff1680610ccf5750610cce6112e3565b5b80610ce657506000809054906101000a900460ff16155b1515610d3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061295e602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610d8d6113b6565b1515610d9557fe5b600082111515610da457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff1661010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610f7457610e046116e6565b604051809103906000f080158015610e20573d6000803e3d6000fd5b5061010460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663485cc955610ea96106f8565b306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015610f5b57600080fd5b505af1158015610f6f573d6000803e3d6000fd5b505050505b816101038190555080600060016101000a81548160ff0219169083151502179055505050565b610fa2610653565b1515610fad57600080fd5b610fb782826113d0565b5050565b6000610fd26068548361142090919063ffffffff16565b9050919050565b6000808284019050838110151515610ff057600080fd5b8091505092915050565b611004828261145e565b5050565b5050565b61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b1580156110ca57600080fd5b505af11580156110de573d6000803e3d6000fd5b5050505050565b5050565b6110f1610722565b156112395761010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561117d57600080fd5b505af1158015611191573d6000803e3d6000fd5b5050505061010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561121c57600080fd5b505af1158015611230573d6000803e3d6000fd5b505050506112d9565b61010460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156112c057600080fd5b505af11580156112d4573d6000803e3d6000fd5b505050505b6112e16114af565b565b600080303b90506000811491505090565b6000806068541180156113565750600073ffffffffffffffffffffffffffffffffffffffff16606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b80156113b15750600073ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b905090565b600080609c541180156113cb57506000609d54115b905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561140c57600080fd5b6000811415151561141c57600080fd5b5050565b6000808314156114335760009050611458565b6000828402905082848281151561144657fe5b0414151561145357600080fd5b809150505b92915050565b6114ab8282606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166114b19092919063ffffffff16565b5050565b565b611599838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb90507c0100000000000000000000000000000000000000000000000000000000028484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061159e565b505050565b6115bd8273ffffffffffffffffffffffffffffffffffffffff166116d3565b15156115c857600080fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b60208310151561161957805182526020820191506020810190506020830392506115f4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461167b576040519150601f19603f3d011682016040523d82523d6000602084013e611680565b606091505b509150915081151561169157600080fd5b6000815111156116cd578080602001905160208110156116b057600080fd5b810190808051906020019092919050505015156116cc57600080fd5b5b50505050565b600080823b905060008111915050919050565b604051611267806116f78339019056fe608060405234801561001057600080fd5b50611247806100206000396000f3fe6080604052600436106100df576000357c0100000000000000000000000000000000000000000000000000000000900480638c52dc411161009c578063c4d66de811610076578063c4d66de814610335578063c6dbdf6114610386578063e3a9db1a146103dd578063f340fa0114610442576100df565b80638c52dc41146102ce5780639af6549a146102e5578063c19d93fb146102fc576100df565b80632348238c146100e457806338af3eed1461013557806343d726d61461018c578063485cc955146101a357806351cff8d914610214578063685ca19414610265575b600080fd5b3480156100f057600080fd5b506101336004803603602081101561010757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610486565b005b34801561014157600080fd5b5061014a6105e7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019857600080fd5b506101a1610611565b005b3480156101af57600080fd5b50610212600480360360408110156101c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106f3565b005b34801561022057600080fd5b506102636004803603602081101561023757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610891565b005b34801561027157600080fd5b506102b46004803603602081101561028857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108b1565b604051808215151515815260200191505060405180910390f35b3480156102da57600080fd5b506102e36108e3565b005b3480156102f157600080fd5b506102fa6109c5565b005b34801561030857600080fd5b50610311610a7a565b6040518082600281111561032157fe5b60ff16815260200191505060405180910390f35b34801561034157600080fd5b506103846004803603602081101561035857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a91565b005b34801561039257600080fd5b5061039b610b8d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103e957600080fd5b5061042c6004803603602081101561040057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bb7565b6040518082815260200191505060405180910390f35b6104846004803603602081101561045857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c00565b005b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104e257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561051e57600080fd5b80603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d9603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600060cb60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561066d57600080fd5b6000600281111561067a57fe5b60cb60009054906101000a900460ff16600281111561069557fe5b1415156106a157600080fd5b600260cb60006101000a81548160ff021916908360028111156106c057fe5b02179055507f088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f60405160405180910390a1565b600060019054906101000a900460ff16806107125750610711610c40565b5b8061072957506000809054906101000a900460ff16155b1515610780576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806111ee602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055506107d182610a91565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561080d57600080fd5b8260cb60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060cb60006101000a81548160ff0219169083600281111561086d57fe5b021790555080600060016101000a81548160ff021916908315150217905550505050565b61089a816108b1565b15156108a557600080fd5b6108ae81610c51565b50565b6000600160028111156108c057fe5b60cb60009054906101000a900460ff1660028111156108db57fe5b149050919050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561093f57600080fd5b6000600281111561094c57fe5b60cb60009054906101000a900460ff16600281111561096757fe5b14151561097357600080fd5b600160cb60006101000a81548160ff0219169083600281111561099257fe5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b6002808111156109d157fe5b60cb60009054906101000a900460ff1660028111156109ec57fe5b1415156109f857600080fd5b60cb60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610a77573d6000803e3d6000fd5b50565b600060cb60009054906101000a900460ff16905090565b600060019054906101000a900460ff1680610ab05750610aaf610c40565b5b80610ac757506000809054906101000a900460ff16155b1515610b1e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806111ee602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610b6f82610dcf565b80600060016101000a81548160ff0219169083151502179055505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006002811115610c0d57fe5b60cb60009054906101000a900460ff166002811115610c2857fe5b141515610c3457600080fd5b610c3d81610ecb565b50565b600080303b90506000811491505090565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cad57600080fd5b6000606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610d7c573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040518082815260200191505060405180910390a25050565b600060019054906101000a900460ff1680610dee5750610ded610c40565b5b80610e0557506000809054906101000a900460ff16155b1515610e5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806111ee602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff021916908315150217905550610ead82611013565b80600060016101000a81548160ff0219169083151502179055505050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f2757600080fd5b6000349050610f7e81606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111cc90919063ffffffff16565b606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040518082815260200191505060405180910390a25050565b600060019054906101000a900460ff16806110325750611031610c40565b5b8061104957506000809054906101000a900460ff16155b15156110a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806111ee602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1690506001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff02191690831515021790555081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d9603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a180600060016101000a81548160ff0219169083151502179055505050565b60008082840190508381101515156111e357600080fd5b809150509291505056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a165627a7a723058206e7831cda3df76175e2ae7a136e3f350427deeb58b6b4059a124c85c941f23530029436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a165627a7a72305820325783e87cd93b3f5e5f1ecd1c2477e5d94a105bf960a4432ae78f4c8eeea0cc0029",
  "sourceMap": "842:2096:10:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;842:2096:10;;;;;;;",
  "deployedSourceMap": "842:2096:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2954:21:7;2964:10;2954:9;:21::i;:::-;842:2096:10;2052:156:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2052:156:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3365:75:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3365:75:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1776::10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1776:75:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3503:85:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3503:85:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1699:189:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1699:189:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1525:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1525:89:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;797:183:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;797:183:8;;;:::i;:::-;;3193:87:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3193:87:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2284:94:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2284:94:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;451:214:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;451:214:69;;;:::i;:::-;;557:82:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;557:82:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2342:284:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2342:284:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2342:284:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1371:89:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1371:89:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2000:161:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2000:161:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2000:161:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;948:358:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;948:358:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;948:358:18;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3845:603:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3845:603:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;3041:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3041:76:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1226:468:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1226:468:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1226:468:10;;;;;;;;;;;;;;;;;:::i;:::-;;3845:603:7;1091:1:69;1074:13;;:18;;;;;;;;;;;1102:20;1125:13;;1102:36;;3923:17:7;3943:9;3923:29;;3962:44;3983:11;3996:9;3962:20;:44::i;:::-;4065:14;4082:26;4098:9;4082:15;:26::i;:::-;4065:43;;4156:25;4171:9;4156:10;;:14;;:25;;;;:::i;:::-;4143:10;:38;;;;4192:37;4209:11;4222:6;4192:16;:37::i;:::-;4272:11;4244:59;;4260:10;4244:59;;;4285:9;4296:6;4244:59;;;;;;;;;;;;;;;;;;;;;;;;4314:46;4337:11;4350:9;4314:22;:46::i;:::-;4371:15;:13;:15::i;:::-;4396:45;4418:11;4431:9;4396:21;:45::i;:::-;1148:1:69;;1183:13;;1167:12;:29;1159:38;;;;;;;;3845:603:7;;:::o;2052:156:18:-;2094:4;2189:12;;2171:15;:30;2164:37;;2052:156;:::o;3365:75:7:-;3402:7;3428:5;;3421:12;;3365:75;:::o;1776::10:-;1813:7;1839:5;;1832:12;;1776:75;:::o;3503:85:7:-;3545:7;3571:10;;3564:17;;3503:85;:::o;1699:189:18:-;1738:4;1834:12;;1815:15;:31;;:66;;;;;1869:12;;1850:15;:31;;1815:66;1808:73;;1699:189;:::o;1525:89::-;1569:7;1595:12;;1588:19;;1525:89;:::o;797:183:8:-;843:10;;;;;;;;;;;842:11;834:20;;;;;;;;872:11;:9;:11::i;:::-;864:20;;;;;;;;908:4;895:10;;:17;;;;;;;;;;;;;;;;;;923:15;:13;:15::i;:::-;953:20;;;;;;;;;;797:183::o;3193:87:7:-;3232:15;3266:7;;;;;;;;;;;3259:14;;3193:87;:::o;2284:94:10:-;2328:4;2366:5;;2351:11;:9;:11::i;:::-;:20;;2344:27;;2284:94;:::o;451:214:69:-;1024:12:70;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;657:1:69;641:13;:17;;;;1243:15:70;1228:12;;:30;;;;;;;;;;;;;;;;;;451:214:69;:::o;557:82:8:-;599:4;622:10;;;;;;;;;;;615:17;;557:82;:::o;2342:284:7:-;1024:12:70;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;2458:1:7;2451:4;:8;2443:17;;;;;;;;2496:1;2478:20;;:6;:20;;;;2470:29;;;;;;;;2543:1;2517:28;;2525:5;2517:28;;;;2509:37;;;;;;;;2565:4;2557:5;:12;;;;2589:6;2579:7;;:16;;;;;;;;;;;;;;;;;;2614:5;2605:6;;:14;;;;;;;;;;;;;;;;;;1243:15:70;1228:12;;:30;;;;;;;;;;;;;;;;;;2342:284:7;;;;:::o;1371:89:18:-;1415:7;1441:12;;1434:19;;1371:89;:::o;2000:161:10:-;2072:11;:9;:11::i;:::-;2064:20;;;;;;;;2103:13;:11;:13::i;:::-;2102:14;2094:23;;;;;;;;2128:7;;;;;;;;;;;:16;;;2145:8;2128:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2128:26:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2128:26:10;;;;2000:161;:::o;948:358:18:-;1024:12:70;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;1046:31:18;:29;:31::i;:::-;1039:39;;;;;;1166:15;1151:11;:30;;1143:39;;;;;;;;1214:11;1200;:25;1192:34;;;;;;;;1252:11;1237:12;:26;;;;1288:11;1273:12;:26;;;;1243:15:70;1228:12;;:30;;;;;;;;;;;;;;;;;;948:358:18;;;:::o;3041:76:7:-;3079:6;3104;;;;;;;;;;;3097:13;;3041:76;:::o;1226:468:10:-;1024:12:70;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:20;1152:12;;;;;;;;;;;1129:35;;1185:4;1170:12;;:19;;;;;;;;;;;;;;;;;;1209:4;1195:11;;:18;;;;;;;;;;;;;;;;;;1354:36:10;:34;:36::i;:::-;1347:44;;;;;;1417:1;1410:4;:8;1402:17;;;;;;;;1552:1;1524:30;;1532:7;;;;;;;;;;;1524:30;;;1520:146;;;1580:18;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1580:18:10;1570:7;;:28;;;;;;;;;;;;;;;;;;1612:7;;;;;;;;;;;:18;;;1631:8;:6;:8::i;:::-;1649:4;1612:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1612:43:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1612:43:10;;;;1520:146;1683:4;1675:5;:12;;;;1243:15:70;1228:12;;:30;;;;;;;;;;;;;;;;;;1226:468:10;;:::o;2532:165:18:-;733:8;:6;:8::i;:::-;725:17;;;;;;;;2640:50;2667:11;2680:9;2640:26;:50::i;:::-;2532:165;;:::o;7248:120:7:-;7315:7;7341:20;7355:5;;7341:9;:13;;:20;;;;:::i;:::-;7334:27;;7248:120;;;:::o;1439:145:34:-;1497:7;1516:9;1532:1;1528;:5;1516:17;;1556:1;1551;:6;;1543:15;;;;;;;;1576:1;1569:8;;;1439:145;;;;:::o;6450:134:7:-;6537:40;6552:11;6565;6537:14;:40::i;:::-;6450:134;;:::o;6854:145::-;;;:::o;2805:95:10:-;2849:7;;;;;;;;;;;:15;;;2871:9;2882:10;2849:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2849:44:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2849:44:10;;;;;2805:95::o;5618:149:7:-;;;:::o;2471:238:10:-;2519:13;:11;:13::i;:::-;2515:156;;;2548:7;;;;;;;;;;;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2548:15:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2548:15:10;;;;2577:7;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2577:29:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2577:29:10;;;;2515:156;;;2637:7;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2637:23:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2637:23:10;;;;2515:156;2681:21;:19;:21::i;:::-;2471:238::o;1349:467:70:-;1396:4;1737:10;1782:7;1770:20;1764:26;;1810:1;1804:2;:7;1797:14;;;1349:467;:::o;4454:159:7:-;4508:4;4541:1;4533:5;;:9;4532:38;;;;;4567:1;4548:21;;:7;;;;;;;;;;;:21;;;;4532:38;:73;;;;;4602:1;4575:29;;4583:6;;;;;;;;;;;4575:29;;;;4532:73;4524:82;;4454:159;:::o;2214:126:18:-;2268:4;2308:1;2293:12;;:16;2292:40;;;;;2330:1;2315:12;;:16;2292:40;2284:49;;2214:126;:::o;5155:168:7:-;5280:1;5257:25;;:11;:25;;;;5249:34;;;;;;;;5314:1;5301:9;:14;;5293:23;;;;;;;;5155:168;;:::o;231:421:34:-;289:7;534:1;529;:6;525:45;;;558:1;551:8;;;;525:45;580:9;596:1;592;:5;580:17;;624:1;619;615;:5;;;;;;;;:10;607:19;;;;;;;;644:1;637:8;;;231:421;;;;;:::o;6047:137:7:-;6132:45;6152:11;6165;6132:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;6047:137;;:::o;1189:98:8:-;:::o;662:174:49:-;744:85;763:5;793;:14;;;:23;;;;818:2;822:5;770:58;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;770:58:49;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;770:58:49;744:18;:85::i;:::-;662:174;;;:::o;2487:869::-;3030:27;3038:5;3030:25;;;:27::i;:::-;3022:36;;;;;;;;3129:12;3143:23;3178:5;3170:19;;3190:4;3170:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3170:25:49;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3128:67:49;;;;3213:7;3205:16;;;;;;;;3256:1;3236:10;:17;:21;3232:118;;;3319:10;3308:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3308:30:49;;;;;;;;;;;;;;;;3300:39;;;;;;;;3232:118;2487:869;;;;:::o;463:616:67:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;842:2096:10:-;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.2;\n\nimport \"zos-lib/contracts/Initializable.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"./FinalizableCrowdsale.sol\";\nimport \"../../payment/escrow/RefundEscrow.sol\";\n\n/**\n * @title RefundableCrowdsale\n * @dev Extension of FinalizableCrowdsale contract that adds a funding goal, and the possibility of users\n * getting a refund if goal is not met.\n *\n * Deprecated, use RefundablePostDeliveryCrowdsale instead. Note that if you allow tokens to be traded before the goal\n * is met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that\n * the goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when\n * the crowdsale is finalized, and the users that purchased from them will be left with worthless tokens.\n */\ncontract RefundableCrowdsale is Initializable, FinalizableCrowdsale {\n    using SafeMath for uint256;\n\n    // minimum amount of funds to be raised in weis\n    uint256 private _goal;\n\n    // refund escrow used to hold funds while crowdsale is running\n    RefundEscrow private _escrow;\n\n    /**\n     * @dev Constructor, creates RefundEscrow.\n     * @param goal Funding goal\n     */\n    function initialize(uint256 goal) public initializer {\n        // FinalizableCrowdsale depends on TimedCrowdsale\n        assert(TimedCrowdsale._hasBeenInitialized());\n\n        require(goal > 0);\n        // conditional added to make initializer idempotent in case of diamond inheritance\n        if (address(_escrow) == address(0)) {\n            _escrow = new RefundEscrow();\n            _escrow.initialize(wallet(), address(this));\n        }\n        _goal = goal;\n    }\n\n    /**\n     * @return minimum amount of funds to be raised in wei.\n     */\n    function goal() public view returns (uint256) {\n        return _goal;\n    }\n\n    /**\n     * @dev Investors can claim refunds here if crowdsale is unsuccessful\n     * @param refundee Whose refund will be claimed.\n     */\n    function claimRefund(address payable refundee) public {\n        require(finalized());\n        require(!goalReached());\n\n        _escrow.withdraw(refundee);\n    }\n\n    /**\n     * @dev Checks whether funding goal was reached.\n     * @return Whether funding goal was reached\n     */\n    function goalReached() public view returns (bool) {\n        return weiRaised() >= _goal;\n    }\n\n    /**\n     * @dev escrow finalization task, called when finalize() is called\n     */\n    function _finalization() internal {\n        if (goalReached()) {\n            _escrow.close();\n            _escrow.beneficiaryWithdraw();\n        } else {\n            _escrow.enableRefunds();\n        }\n\n        super._finalization();\n    }\n\n    /**\n     * @dev Overrides Crowdsale fund forwarding, sending funds to escrow.\n     */\n    function _forwardFunds() internal {\n        _escrow.deposit.value(msg.value)(msg.sender);\n    }\n\n    uint256[50] private ______gap;\n}\n",
  "sourcePath": "/home/frangio/zs/oz/eth/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
  "ast": {
    "absolutePath": "/home/frangio/zs/oz/eth/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
    "exportedSymbols": {
      "RefundableCrowdsale": [
        1423
      ]
    },
    "id": 1424,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1267,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 1268,
        "nodeType": "ImportDirective",
        "scope": 1424,
        "sourceUnit": 8439,
        "src": "25:45:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/math/SafeMath.sol",
        "file": "../../math/SafeMath.sol",
        "id": 1269,
        "nodeType": "ImportDirective",
        "scope": 1424,
        "sourceUnit": 4305,
        "src": "71:33:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/crowdsale/distribution/FinalizableCrowdsale.sol",
        "file": "./FinalizableCrowdsale.sol",
        "id": 1270,
        "nodeType": "ImportDirective",
        "scope": 1424,
        "sourceUnit": 1180,
        "src": "105:36:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/payment/escrow/RefundEscrow.sol",
        "file": "../../payment/escrow/RefundEscrow.sol",
        "id": 1271,
        "nodeType": "ImportDirective",
        "scope": 1424,
        "sourceUnit": 5210,
        "src": "142:47:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1272,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8438,
              "src": "874:13:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8438",
                "typeString": "contract Initializable"
              }
            },
            "id": 1273,
            "nodeType": "InheritanceSpecifier",
            "src": "874:13:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1274,
              "name": "FinalizableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1179,
              "src": "889:20:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FinalizableCrowdsale_$1179",
                "typeString": "contract FinalizableCrowdsale"
              }
            },
            "id": 1275,
            "nodeType": "InheritanceSpecifier",
            "src": "889:20:10"
          }
        ],
        "contractDependencies": [
          1122,
          1179,
          2201,
          5209,
          8382,
          8438
        ],
        "contractKind": "contract",
        "documentation": "@title RefundableCrowdsale\n@dev Extension of FinalizableCrowdsale contract that adds a funding goal, and the possibility of users\ngetting a refund if goal is not met.\n * Deprecated, use RefundablePostDeliveryCrowdsale instead. Note that if you allow tokens to be traded before the goal\nis met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that\nthe goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when\nthe crowdsale is finalized, and the users that purchased from them will be left with worthless tokens.",
        "fullyImplemented": true,
        "id": 1423,
        "linearizedBaseContracts": [
          1423,
          1179,
          2201,
          1122,
          8382,
          8438
        ],
        "name": "RefundableCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1278,
            "libraryName": {
              "contractScope": null,
              "id": 1276,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4304,
              "src": "922:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4304",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "916:27:10",
            "typeName": {
              "id": 1277,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "935:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1280,
            "name": "_goal",
            "nodeType": "VariableDeclaration",
            "scope": 1423,
            "src": "1001:21:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1279,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1001:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1282,
            "name": "_escrow",
            "nodeType": "VariableDeclaration",
            "scope": 1423,
            "src": "1096:28:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RefundEscrow_$5209",
              "typeString": "contract RefundEscrow"
            },
            "typeName": {
              "contractScope": null,
              "id": 1281,
              "name": "RefundEscrow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5209,
              "src": "1096:12:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                "typeString": "contract RefundEscrow"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1330,
              "nodeType": "Block",
              "src": "1279:415:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1290,
                            "name": "TimedCrowdsale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2201,
                            "src": "1354:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$2201_$",
                              "typeString": "type(contract TimedCrowdsale)"
                            }
                          },
                          "id": 1291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2152,
                          "src": "1354:34:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 1292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1354:36:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1289,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8442,
                      "src": "1347:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1347:44:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1294,
                  "nodeType": "ExpressionStatement",
                  "src": "1347:44:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1296,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1284,
                          "src": "1410:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1417:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1410:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1295,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8456,
                        8457
                      ],
                      "referencedDeclaration": 8456,
                      "src": "1402:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1402:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1300,
                  "nodeType": "ExpressionStatement",
                  "src": "1402:17:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1302,
                          "name": "_escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1282,
                          "src": "1532:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                            "typeString": "contract RefundEscrow"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                            "typeString": "contract RefundEscrow"
                          }
                        ],
                        "id": 1301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1524:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 1303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1524:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1552:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1544:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 1306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1544:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1524:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1325,
                  "nodeType": "IfStatement",
                  "src": "1520:146:10",
                  "trueBody": {
                    "id": 1324,
                    "nodeType": "Block",
                    "src": "1556:110:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1308,
                            "name": "_escrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1282,
                            "src": "1570:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                              "typeString": "contract RefundEscrow"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1580:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_RefundEscrow_$5209_$",
                                "typeString": "function () returns (contract RefundEscrow)"
                              },
                              "typeName": {
                                "contractScope": null,
                                "id": 1309,
                                "name": "RefundEscrow",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 5209,
                                "src": "1584:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                                  "typeString": "contract RefundEscrow"
                                }
                              }
                            },
                            "id": 1311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1580:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                              "typeString": "contract RefundEscrow"
                            }
                          },
                          "src": "1570:28:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                            "typeString": "contract RefundEscrow"
                          }
                        },
                        "id": 1313,
                        "nodeType": "ExpressionStatement",
                        "src": "1570:28:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1317,
                                "name": "wallet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 926,
                                "src": "1631:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 1318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1631:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1320,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8508,
                                  "src": "1649:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RefundableCrowdsale_$1423",
                                    "typeString": "contract RefundableCrowdsale"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_RefundableCrowdsale_$1423",
                                    "typeString": "contract RefundableCrowdsale"
                                  }
                                ],
                                "id": 1319,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1641:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 1321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1641:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1314,
                              "name": "_escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1282,
                              "src": "1612:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 1316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5094,
                            "src": "1612:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_address_$returns$__$",
                              "typeString": "function (address payable,address) external"
                            }
                          },
                          "id": 1322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1612:43:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1323,
                        "nodeType": "ExpressionStatement",
                        "src": "1612:43:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1326,
                      "name": "_goal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1280,
                      "src": "1675:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1327,
                      "name": "goal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1284,
                      "src": "1683:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1675:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1329,
                  "nodeType": "ExpressionStatement",
                  "src": "1675:12:10"
                }
              ]
            },
            "documentation": "@dev Constructor, creates RefundEscrow.\n@param goal Funding goal",
            "id": 1331,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1287,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1286,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8419,
                  "src": "1267:11:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1267:11:10"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1284,
                  "name": "goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 1331,
                  "src": "1246:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1246:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1245:14:10"
            },
            "returnParameters": {
              "id": 1288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1279:0:10"
            },
            "scope": 1423,
            "src": "1226:468:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1338,
              "nodeType": "Block",
              "src": "1822:29:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1336,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1280,
                    "src": "1839:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1335,
                  "id": 1337,
                  "nodeType": "Return",
                  "src": "1832:12:10"
                }
              ]
            },
            "documentation": "@return minimum amount of funds to be raised in wei.",
            "id": 1339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "goal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1789:2:10"
            },
            "returnParameters": {
              "id": 1335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1334,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1339,
                  "src": "1813:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1813:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1812:9:10"
            },
            "scope": 1423,
            "src": "1776:75:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1361,
              "nodeType": "Block",
              "src": "2054:107:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1345,
                          "name": "finalized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1146,
                          "src": "2072:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 1346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2072:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1344,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8456,
                        8457
                      ],
                      "referencedDeclaration": 8456,
                      "src": "2064:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2064:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1348,
                  "nodeType": "ExpressionStatement",
                  "src": "2064:20:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2102:14:10",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1350,
                            "name": "goalReached",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1373,
                            "src": "2103:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2103:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8456,
                        8457
                      ],
                      "referencedDeclaration": 8456,
                      "src": "2094:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2094:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1354,
                  "nodeType": "ExpressionStatement",
                  "src": "2094:23:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1358,
                        "name": "refundee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1341,
                        "src": "2145:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1355,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1282,
                        "src": "2128:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                          "typeString": "contract RefundEscrow"
                        }
                      },
                      "id": 1357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4918,
                      "src": "2128:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 1359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2128:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1360,
                  "nodeType": "ExpressionStatement",
                  "src": "2128:26:10"
                }
              ]
            },
            "documentation": "@dev Investors can claim refunds here if crowdsale is unsuccessful\n@param refundee Whose refund will be claimed.",
            "id": 1362,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRefund",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1341,
                  "name": "refundee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1362,
                  "src": "2021:24:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2021:15:10",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2020:26:10"
            },
            "returnParameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2054:0:10"
            },
            "scope": 1423,
            "src": "2000:161:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1372,
              "nodeType": "Block",
              "src": "2334:44:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1367,
                        "name": "weiRaised",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 942,
                        "src": "2351:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2351:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1369,
                      "name": "_goal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1280,
                      "src": "2366:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2351:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1366,
                  "id": 1371,
                  "nodeType": "Return",
                  "src": "2344:27:10"
                }
              ]
            },
            "documentation": "@dev Checks whether funding goal was reached.\n@return Whether funding goal was reached",
            "id": 1373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "goalReached",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2304:2:10"
            },
            "returnParameters": {
              "id": 1366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1365,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1373,
                  "src": "2328:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1364,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2328:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2327:6:10"
            },
            "scope": 1423,
            "src": "2284:94:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1401,
              "nodeType": "Block",
              "src": "2505:204:10",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1376,
                      "name": "goalReached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1373,
                      "src": "2519:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 1377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2519:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1394,
                    "nodeType": "Block",
                    "src": "2623:48:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1389,
                              "name": "_escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1282,
                              "src": "2637:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 1391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "enableRefunds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5171,
                            "src": "2637:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 1392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2637:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1393,
                        "nodeType": "ExpressionStatement",
                        "src": "2637:23:10"
                      }
                    ]
                  },
                  "id": 1395,
                  "nodeType": "IfStatement",
                  "src": "2515:156:10",
                  "trueBody": {
                    "id": 1388,
                    "nodeType": "Block",
                    "src": "2534:83:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1378,
                              "name": "_escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1282,
                              "src": "2548:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 1380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "close",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5150,
                            "src": "2548:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 1381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2548:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1382,
                        "nodeType": "ExpressionStatement",
                        "src": "2548:15:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1383,
                              "name": "_escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1282,
                              "src": "2577:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 1385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "beneficiaryWithdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5191,
                            "src": "2577:27:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 1386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2577:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1387,
                        "nodeType": "ExpressionStatement",
                        "src": "2577:29:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1396,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8509,
                        "src": "2681:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_RefundableCrowdsale_$1423",
                          "typeString": "contract super RefundableCrowdsale"
                        }
                      },
                      "id": 1398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_finalization",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1174,
                      "src": "2681:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2681:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1400,
                  "nodeType": "ExpressionStatement",
                  "src": "2681:21:10"
                }
              ]
            },
            "documentation": "@dev escrow finalization task, called when finalize() is called",
            "id": 1402,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_finalization",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2493:2:10"
            },
            "returnParameters": {
              "id": 1375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2505:0:10"
            },
            "scope": 1423,
            "src": "2471:238:10",
            "stateMutability": "nonpayable",
            "superFunction": 1174,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1417,
              "nodeType": "Block",
              "src": "2839:61:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1413,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8453,
                          "src": "2882:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2882:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1410,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8453,
                            "src": "2871:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2871:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1405,
                            "name": "_escrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1282,
                            "src": "2849:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                              "typeString": "contract RefundEscrow"
                            }
                          },
                          "id": 1408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5129,
                          "src": "2849:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                            "typeString": "function (address) payable external"
                          }
                        },
                        "id": 1409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2849:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_address_$returns$__$value_$",
                          "typeString": "function (uint256) returns (function (address) payable external)"
                        }
                      },
                      "id": 1412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2849:32:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 1415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2849:44:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1416,
                  "nodeType": "ExpressionStatement",
                  "src": "2849:44:10"
                }
              ]
            },
            "documentation": "@dev Overrides Crowdsale fund forwarding, sending funds to escrow.",
            "id": 1418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_forwardFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2827:2:10"
            },
            "returnParameters": {
              "id": 1404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2839:0:10"
            },
            "scope": 1423,
            "src": "2805:95:10",
            "stateMutability": "nonpayable",
            "superFunction": 1117,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1422,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 1423,
            "src": "2906:29:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 1419,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2906:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1421,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 1420,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2914:2:10",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "2906:11:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 1424,
        "src": "842:2096:10"
      }
    ],
    "src": "0:2939:10"
  },
  "legacyAST": {
    "absolutePath": "/home/frangio/zs/oz/eth/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
    "exportedSymbols": {
      "RefundableCrowdsale": [
        1423
      ]
    },
    "id": 1424,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1267,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "zos-lib/contracts/Initializable.sol",
        "file": "zos-lib/contracts/Initializable.sol",
        "id": 1268,
        "nodeType": "ImportDirective",
        "scope": 1424,
        "sourceUnit": 8439,
        "src": "25:45:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/math/SafeMath.sol",
        "file": "../../math/SafeMath.sol",
        "id": 1269,
        "nodeType": "ImportDirective",
        "scope": 1424,
        "sourceUnit": 4305,
        "src": "71:33:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/crowdsale/distribution/FinalizableCrowdsale.sol",
        "file": "./FinalizableCrowdsale.sol",
        "id": 1270,
        "nodeType": "ImportDirective",
        "scope": 1424,
        "sourceUnit": 1180,
        "src": "105:36:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/zs/oz/eth/contracts/payment/escrow/RefundEscrow.sol",
        "file": "../../payment/escrow/RefundEscrow.sol",
        "id": 1271,
        "nodeType": "ImportDirective",
        "scope": 1424,
        "sourceUnit": 5210,
        "src": "142:47:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1272,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8438,
              "src": "874:13:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8438",
                "typeString": "contract Initializable"
              }
            },
            "id": 1273,
            "nodeType": "InheritanceSpecifier",
            "src": "874:13:10"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1274,
              "name": "FinalizableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1179,
              "src": "889:20:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FinalizableCrowdsale_$1179",
                "typeString": "contract FinalizableCrowdsale"
              }
            },
            "id": 1275,
            "nodeType": "InheritanceSpecifier",
            "src": "889:20:10"
          }
        ],
        "contractDependencies": [
          1122,
          1179,
          2201,
          5209,
          8382,
          8438
        ],
        "contractKind": "contract",
        "documentation": "@title RefundableCrowdsale\n@dev Extension of FinalizableCrowdsale contract that adds a funding goal, and the possibility of users\ngetting a refund if goal is not met.\n * Deprecated, use RefundablePostDeliveryCrowdsale instead. Note that if you allow tokens to be traded before the goal\nis met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that\nthe goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when\nthe crowdsale is finalized, and the users that purchased from them will be left with worthless tokens.",
        "fullyImplemented": true,
        "id": 1423,
        "linearizedBaseContracts": [
          1423,
          1179,
          2201,
          1122,
          8382,
          8438
        ],
        "name": "RefundableCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1278,
            "libraryName": {
              "contractScope": null,
              "id": 1276,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4304,
              "src": "922:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4304",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "916:27:10",
            "typeName": {
              "id": 1277,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "935:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1280,
            "name": "_goal",
            "nodeType": "VariableDeclaration",
            "scope": 1423,
            "src": "1001:21:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1279,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1001:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1282,
            "name": "_escrow",
            "nodeType": "VariableDeclaration",
            "scope": 1423,
            "src": "1096:28:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RefundEscrow_$5209",
              "typeString": "contract RefundEscrow"
            },
            "typeName": {
              "contractScope": null,
              "id": 1281,
              "name": "RefundEscrow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5209,
              "src": "1096:12:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                "typeString": "contract RefundEscrow"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1330,
              "nodeType": "Block",
              "src": "1279:415:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1290,
                            "name": "TimedCrowdsale",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2201,
                            "src": "1354:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$2201_$",
                              "typeString": "type(contract TimedCrowdsale)"
                            }
                          },
                          "id": 1291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_hasBeenInitialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2152,
                          "src": "1354:34:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 1292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1354:36:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1289,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8442,
                      "src": "1347:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1347:44:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1294,
                  "nodeType": "ExpressionStatement",
                  "src": "1347:44:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1296,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1284,
                          "src": "1410:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1417:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1410:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1295,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8456,
                        8457
                      ],
                      "referencedDeclaration": 8456,
                      "src": "1402:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1402:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1300,
                  "nodeType": "ExpressionStatement",
                  "src": "1402:17:10"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1302,
                          "name": "_escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1282,
                          "src": "1532:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                            "typeString": "contract RefundEscrow"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                            "typeString": "contract RefundEscrow"
                          }
                        ],
                        "id": 1301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1524:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 1303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1524:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1552:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1544:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 1306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1544:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1524:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1325,
                  "nodeType": "IfStatement",
                  "src": "1520:146:10",
                  "trueBody": {
                    "id": 1324,
                    "nodeType": "Block",
                    "src": "1556:110:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1308,
                            "name": "_escrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1282,
                            "src": "1570:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                              "typeString": "contract RefundEscrow"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1580:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_RefundEscrow_$5209_$",
                                "typeString": "function () returns (contract RefundEscrow)"
                              },
                              "typeName": {
                                "contractScope": null,
                                "id": 1309,
                                "name": "RefundEscrow",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 5209,
                                "src": "1584:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                                  "typeString": "contract RefundEscrow"
                                }
                              }
                            },
                            "id": 1311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1580:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                              "typeString": "contract RefundEscrow"
                            }
                          },
                          "src": "1570:28:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                            "typeString": "contract RefundEscrow"
                          }
                        },
                        "id": 1313,
                        "nodeType": "ExpressionStatement",
                        "src": "1570:28:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1317,
                                "name": "wallet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 926,
                                "src": "1631:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 1318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1631:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1320,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8508,
                                  "src": "1649:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RefundableCrowdsale_$1423",
                                    "typeString": "contract RefundableCrowdsale"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_RefundableCrowdsale_$1423",
                                    "typeString": "contract RefundableCrowdsale"
                                  }
                                ],
                                "id": 1319,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1641:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 1321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1641:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1314,
                              "name": "_escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1282,
                              "src": "1612:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 1316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5094,
                            "src": "1612:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_address_$returns$__$",
                              "typeString": "function (address payable,address) external"
                            }
                          },
                          "id": 1322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1612:43:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1323,
                        "nodeType": "ExpressionStatement",
                        "src": "1612:43:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1326,
                      "name": "_goal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1280,
                      "src": "1675:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1327,
                      "name": "goal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1284,
                      "src": "1683:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1675:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1329,
                  "nodeType": "ExpressionStatement",
                  "src": "1675:12:10"
                }
              ]
            },
            "documentation": "@dev Constructor, creates RefundEscrow.\n@param goal Funding goal",
            "id": 1331,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1287,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1286,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8419,
                  "src": "1267:11:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1267:11:10"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1284,
                  "name": "goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 1331,
                  "src": "1246:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1246:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1245:14:10"
            },
            "returnParameters": {
              "id": 1288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1279:0:10"
            },
            "scope": 1423,
            "src": "1226:468:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1338,
              "nodeType": "Block",
              "src": "1822:29:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1336,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1280,
                    "src": "1839:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1335,
                  "id": 1337,
                  "nodeType": "Return",
                  "src": "1832:12:10"
                }
              ]
            },
            "documentation": "@return minimum amount of funds to be raised in wei.",
            "id": 1339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "goal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1789:2:10"
            },
            "returnParameters": {
              "id": 1335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1334,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1339,
                  "src": "1813:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1813:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1812:9:10"
            },
            "scope": 1423,
            "src": "1776:75:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1361,
              "nodeType": "Block",
              "src": "2054:107:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1345,
                          "name": "finalized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1146,
                          "src": "2072:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 1346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2072:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1344,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8456,
                        8457
                      ],
                      "referencedDeclaration": 8456,
                      "src": "2064:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2064:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1348,
                  "nodeType": "ExpressionStatement",
                  "src": "2064:20:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2102:14:10",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1350,
                            "name": "goalReached",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1373,
                            "src": "2103:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2103:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8456,
                        8457
                      ],
                      "referencedDeclaration": 8456,
                      "src": "2094:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2094:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1354,
                  "nodeType": "ExpressionStatement",
                  "src": "2094:23:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1358,
                        "name": "refundee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1341,
                        "src": "2145:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1355,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1282,
                        "src": "2128:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                          "typeString": "contract RefundEscrow"
                        }
                      },
                      "id": 1357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4918,
                      "src": "2128:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 1359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2128:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1360,
                  "nodeType": "ExpressionStatement",
                  "src": "2128:26:10"
                }
              ]
            },
            "documentation": "@dev Investors can claim refunds here if crowdsale is unsuccessful\n@param refundee Whose refund will be claimed.",
            "id": 1362,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRefund",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1341,
                  "name": "refundee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1362,
                  "src": "2021:24:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2021:15:10",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2020:26:10"
            },
            "returnParameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2054:0:10"
            },
            "scope": 1423,
            "src": "2000:161:10",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1372,
              "nodeType": "Block",
              "src": "2334:44:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1367,
                        "name": "weiRaised",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 942,
                        "src": "2351:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2351:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1369,
                      "name": "_goal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1280,
                      "src": "2366:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2351:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1366,
                  "id": 1371,
                  "nodeType": "Return",
                  "src": "2344:27:10"
                }
              ]
            },
            "documentation": "@dev Checks whether funding goal was reached.\n@return Whether funding goal was reached",
            "id": 1373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "goalReached",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2304:2:10"
            },
            "returnParameters": {
              "id": 1366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1365,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1373,
                  "src": "2328:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1364,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2328:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2327:6:10"
            },
            "scope": 1423,
            "src": "2284:94:10",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1401,
              "nodeType": "Block",
              "src": "2505:204:10",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1376,
                      "name": "goalReached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1373,
                      "src": "2519:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 1377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2519:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1394,
                    "nodeType": "Block",
                    "src": "2623:48:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1389,
                              "name": "_escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1282,
                              "src": "2637:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 1391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "enableRefunds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5171,
                            "src": "2637:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 1392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2637:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1393,
                        "nodeType": "ExpressionStatement",
                        "src": "2637:23:10"
                      }
                    ]
                  },
                  "id": 1395,
                  "nodeType": "IfStatement",
                  "src": "2515:156:10",
                  "trueBody": {
                    "id": 1388,
                    "nodeType": "Block",
                    "src": "2534:83:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1378,
                              "name": "_escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1282,
                              "src": "2548:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 1380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "close",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5150,
                            "src": "2548:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 1381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2548:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1382,
                        "nodeType": "ExpressionStatement",
                        "src": "2548:15:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1383,
                              "name": "_escrow",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1282,
                              "src": "2577:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                                "typeString": "contract RefundEscrow"
                              }
                            },
                            "id": 1385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "beneficiaryWithdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5191,
                            "src": "2577:27:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 1386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2577:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1387,
                        "nodeType": "ExpressionStatement",
                        "src": "2577:29:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1396,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8509,
                        "src": "2681:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_RefundableCrowdsale_$1423",
                          "typeString": "contract super RefundableCrowdsale"
                        }
                      },
                      "id": 1398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_finalization",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1174,
                      "src": "2681:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2681:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1400,
                  "nodeType": "ExpressionStatement",
                  "src": "2681:21:10"
                }
              ]
            },
            "documentation": "@dev escrow finalization task, called when finalize() is called",
            "id": 1402,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_finalization",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2493:2:10"
            },
            "returnParameters": {
              "id": 1375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2505:0:10"
            },
            "scope": 1423,
            "src": "2471:238:10",
            "stateMutability": "nonpayable",
            "superFunction": 1174,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1417,
              "nodeType": "Block",
              "src": "2839:61:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1413,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8453,
                          "src": "2882:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2882:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1410,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8453,
                            "src": "2871:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2871:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1405,
                            "name": "_escrow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1282,
                            "src": "2849:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RefundEscrow_$5209",
                              "typeString": "contract RefundEscrow"
                            }
                          },
                          "id": 1408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5129,
                          "src": "2849:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                            "typeString": "function (address) payable external"
                          }
                        },
                        "id": 1409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2849:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_address_$returns$__$value_$",
                          "typeString": "function (uint256) returns (function (address) payable external)"
                        }
                      },
                      "id": 1412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2849:32:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 1415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2849:44:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1416,
                  "nodeType": "ExpressionStatement",
                  "src": "2849:44:10"
                }
              ]
            },
            "documentation": "@dev Overrides Crowdsale fund forwarding, sending funds to escrow.",
            "id": 1418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_forwardFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2827:2:10"
            },
            "returnParameters": {
              "id": 1404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2839:0:10"
            },
            "scope": 1423,
            "src": "2805:95:10",
            "stateMutability": "nonpayable",
            "superFunction": 1117,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1422,
            "name": "______gap",
            "nodeType": "VariableDeclaration",
            "scope": 1423,
            "src": "2906:29:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 1419,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2906:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1421,
              "length": {
                "argumentTypes": null,
                "hexValue": "3530",
                "id": 1420,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2914:2:10",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": null,
                  "typeString": null
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "2906:11:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 1424,
        "src": "842:2096:10"
      }
    ],
    "src": "0:2939:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-06-10T23:33:49.216Z",
  "devdoc": {
    "details": "Extension of FinalizableCrowdsale contract that adds a funding goal, and the possibility of users getting a refund if goal is not met. * Deprecated, use RefundablePostDeliveryCrowdsale instead. Note that if you allow tokens to be traded before the goal is met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that the goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when the crowdsale is finalized, and the users that purchased from them will be left with worthless tokens.",
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "claimRefund(address)": {
        "details": "Investors can claim refunds here if crowdsale is unsuccessful",
        "params": {
          "refundee": "Whose refund will be claimed."
        }
      },
      "closingTime()": {
        "return": "the crowdsale closing time."
      },
      "finalize()": {
        "details": "Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function."
      },
      "finalized()": {
        "return": "true if the crowdsale is finalized, false otherwise."
      },
      "goal()": {
        "return": "minimum amount of funds to be raised in wei."
      },
      "goalReached()": {
        "details": "Checks whether funding goal was reached.",
        "return": "Whether funding goal was reached"
      },
      "hasClosed()": {
        "details": "Checks whether the period in which the crowdsale is open has already elapsed.",
        "return": "Whether crowdsale period has elapsed"
      },
      "initialize(uint256)": {
        "details": "Constructor, creates RefundEscrow.",
        "params": {
          "goal": "Funding goal"
        }
      },
      "initialize(uint256,address,address)": {
        "details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
        "params": {
          "rate": "Number of token units a buyer gets per wei",
          "token": "Address of the token being sold",
          "wallet": "Address where collected funds will be forwarded to"
        }
      },
      "initialize(uint256,uint256)": {
        "details": "Constructor, takes crowdsale opening and closing times.",
        "params": {
          "closingTime": "Crowdsale closing time",
          "openingTime": "Crowdsale opening time"
        }
      },
      "isOpen()": {
        "return": "true if the crowdsale is open, false otherwise."
      },
      "openingTime()": {
        "return": "the crowdsale opening time."
      },
      "rate()": {
        "return": "the number of token units a buyer gets per wei."
      },
      "token()": {
        "return": "the token being sold."
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    },
    "title": "RefundableCrowdsale"
  },
  "userdoc": {
    "methods": {}
  }
}